import{_ as n,o as s,c as a,e}from"./app-8007fa1b.js";const p="/assets/img001-8e99cc24.png",t={},c=e(`<h1 id="一、分页功能" tabindex="-1"><a class="header-anchor" href="#一、分页功能" aria-hidden="true">#</a> 一、分页功能</h1><h2 id="_1、mysql分页语法" tabindex="-1"><a class="header-anchor" href="#_1、mysql分页语法" aria-hidden="true">#</a> 1、MySQL分页语法</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 每页显示5条记录：pageSize  </span>
<span class="token comment"># 显示第一页：pageNo  </span>
<span class="token comment"># limit 子句的第一个参数（index）：从0开始  </span>
<span class="token comment"># 通过罗列一部分数据实际查看发现：  </span>
<span class="token comment"># pageNo 为 1 的时候：0,5    0*5,5   (1-1)*5,5  </span>
<span class="token comment"># pageNo 为 2 的时候：5,5    1*5,5   (2-1)*5,5  </span>
<span class="token comment"># pageNo 为 3 的时候：10,5   2*5,5   (3-1)*5,5  </span>
<span class="token comment"># 通过 pageNo 计算 index 的公式：(pageNo - 1)*pageSize  </span>
<span class="token keyword">select</span> hid<span class="token punctuation">,</span>  
       title<span class="token punctuation">,</span>  
       article<span class="token punctuation">,</span>  
       <span class="token keyword">type</span><span class="token punctuation">,</span>  
       publisher<span class="token punctuation">,</span>  
       page_views<span class="token punctuation">,</span>  
       create_time<span class="token punctuation">,</span>  
       update_time<span class="token punctuation">,</span>  
       is_deleted  
<span class="token keyword">from</span> news_headline  
<span class="token keyword">limit</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h2 id="_2、后端需要给前端提供的数据" tabindex="-1"><a class="header-anchor" href="#_2、后端需要给前端提供的数据" aria-hidden="true">#</a> 2、后端需要给前端提供的数据</h2><p><img src="`+p+`" alt="imags"></p><br><ul><li>页面要显示的数据本身：使用limit查询</li><li>总记录数：专门写SQL语句查询</li><li>总页数：需要在Java代码计算</li></ul><br><h2 id="_3、总页数计算" tabindex="-1"><a class="header-anchor" href="#_3、总页数计算" aria-hidden="true">#</a> 3、总页数计算</h2><ul><li>总记录数除以pageSize</li><li>看总记录数对pageSize是否能够整除 <ul><li>能够整除：+0</li><li>不能整除：+1</li></ul></li></ul><br><h2 id="_4、动态查询条件" tabindex="-1"><a class="header-anchor" href="#_4、动态查询条件" aria-hidden="true">#</a> 4、动态查询条件</h2><ul><li>头条分类信息不一定有 <ul><li>type：非空并且非零表示用户选择了某一个分类</li></ul></li><li>搜索关键词不一定有 <ul><li>keyWords：非空字符串时表示用户输入的关键词</li></ul></li></ul><br><p>注意：不仅在查询页面显示数据时要动态添加查询条件，而且查询总记录数也是在指定查询条件下查的。</p><br><h2 id="_5、dao查询页面要显示数据的方法" tabindex="-1"><a class="header-anchor" href="#_5、dao查询页面要显示数据的方法" aria-hidden="true">#</a> 5、Dao查询页面要显示数据的方法</h2><h3 id="_1接口方法" tabindex="-1"><a class="header-anchor" href="#_1接口方法" aria-hidden="true">#</a> ①接口方法</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**  
 * 对分页要显示数据的查询  
 * <span class="token keyword">@param</span> <span class="token parameter">keyword</span> 搜索关键词  
 * <span class="token keyword">@param</span> <span class="token parameter">type</span> 头条分类  
 * <span class="token keyword">@param</span> <span class="token parameter">pageNum</span> 页码  
 * <span class="token keyword">@param</span> <span class="token parameter">pageSize</span> 每页显示多少条数据  
 * <span class="token keyword">@return</span>  
 */</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">NewsHeadline</span><span class="token punctuation">&gt;</span></span> <span class="token function">selectNewsHeadlinePage</span><span class="token punctuation">(</span><span class="token class-name">String</span> keyword<span class="token punctuation">,</span> <span class="token class-name">Integer</span> type<span class="token punctuation">,</span> <span class="token class-name">Integer</span> pageNum<span class="token punctuation">,</span> <span class="token class-name">Integer</span> pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h3 id="_2实现方法" tabindex="-1"><a class="header-anchor" href="#_2实现方法" aria-hidden="true">#</a> ②实现方法</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>  
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">NewsHeadline</span><span class="token punctuation">&gt;</span></span> <span class="token function">selectNewsHeadlinePage</span><span class="token punctuation">(</span><span class="token class-name">String</span> keyword<span class="token punctuation">,</span> <span class="token class-name">Integer</span> type<span class="token punctuation">,</span> <span class="token class-name">Integer</span> pageNum<span class="token punctuation">,</span> <span class="token class-name">Integer</span> pageSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token comment">// 0、创建 List 集合，存放 SQL 语句的参数  </span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> sqlArgList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
    <span class="token comment">// 1、基础 SQL 语句  </span>
    <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">&quot;select hid,title,article,type,publisher,page_views pageViews,create_time createTime,update_time updateTime from news_headline where is_deleted=0&quot;</span><span class="token punctuation">;</span>  
  
    <span class="token comment">// 2、判断用户是否输入了搜索关键词  </span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>keyword <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> keyword<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token comment">// ❤keyword是非空字符串时在 SQL 语句中附加查询条件  </span>
        sql <span class="token operator">+=</span> <span class="token string">&quot; and title like ?&quot;</span><span class="token punctuation">;</span>  
  
        <span class="token comment">// ❤keyword是非空字符串时在最终执行查询时使用的 SQL 参数数组中添加参数  </span>
        <span class="token comment">// ❤两边加上%实现模糊查询的效果  </span>
        sqlArgList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;%&quot;</span> <span class="token operator">+</span> keyword <span class="token operator">+</span> <span class="token string">&quot;%&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
  
    <span class="token comment">// 3、判断用户是否输入了头条的类型  </span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> type <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token comment">// ❤type非空非零时在 SQL 语句中附加查询条件  </span>
        sql <span class="token operator">+=</span> <span class="token string">&quot; and type = ?&quot;</span><span class="token punctuation">;</span>  
  
        <span class="token comment">// ❤type非空非零时在最终执行查询时使用的 SQL 参数数组中添加参数  </span>
        sqlArgList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
  
    <span class="token comment">// 4、给 SQL 语句附加 limit 子句部分  </span>
    sql <span class="token operator">+=</span> <span class="token string">&quot; limit ?,?&quot;</span><span class="token punctuation">;</span>  
    sqlArgList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">(</span>pageNum <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    sqlArgList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
    <span class="token comment">// 5、把 SQL 参数的 List 集合转换为数组传递给父类的查询方法  </span>
    <span class="token keyword">return</span> <span class="token function">getBeanList</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span> <span class="token class-name">NewsHeadline</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> sqlArgList<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h2 id="_6、dao查询总记录数的方法" tabindex="-1"><a class="header-anchor" href="#_6、dao查询总记录数的方法" aria-hidden="true">#</a> 6、Dao查询总记录数的方法</h2><h3 id="_1接口方法-1" tabindex="-1"><a class="header-anchor" href="#_1接口方法-1" aria-hidden="true">#</a> ①接口方法</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**  
 * 查询分页时需要使用的总记录数  
 * <span class="token keyword">@param</span> <span class="token parameter">keyword</span>  
 * <span class="token keyword">@param</span> <span class="token parameter">type</span>  
 * <span class="token keyword">@return</span>  
 */</span><span class="token keyword">int</span> <span class="token function">selectNewsHeadlineCount</span><span class="token punctuation">(</span><span class="token class-name">String</span> keyword<span class="token punctuation">,</span> <span class="token class-name">Integer</span> type<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h3 id="_2实现方法-1" tabindex="-1"><a class="header-anchor" href="#_2实现方法-1" aria-hidden="true">#</a> ②实现方法</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>  
<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">selectNewsHeadlineCount</span><span class="token punctuation">(</span><span class="token class-name">String</span> keyword<span class="token punctuation">,</span> <span class="token class-name">Integer</span> type<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
  
    <span class="token comment">// 0、创建 List 集合，存放 SQL 语句的参数  </span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> sqlArgList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
    <span class="token comment">// 1、基础 SQL 语句  </span>
    <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">&quot;select count(*) from news_headline where is_deleted=0&quot;</span><span class="token punctuation">;</span>  
  
    <span class="token comment">// 2、判断用户是否输入了搜索关键词  </span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>keyword <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> keyword<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token comment">// ❤keyword是非空字符串时在 SQL 语句中附加查询条件  </span>
        sql <span class="token operator">+=</span> <span class="token string">&quot; and title like ?&quot;</span><span class="token punctuation">;</span>  
  
        <span class="token comment">// ❤keyword是非空字符串时在最终执行查询时使用的 SQL 参数数组中添加参数  </span>
        <span class="token comment">// ❤两边加上%实现模糊查询的效果  </span>
        sqlArgList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;%&quot;</span> <span class="token operator">+</span> keyword <span class="token operator">+</span> <span class="token string">&quot;%&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
  
    <span class="token comment">// 3、判断用户是否输入了头条的类型  </span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> type <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token comment">// ❤type非空非零时在 SQL 语句中附加查询条件  </span>
        sql <span class="token operator">+=</span> <span class="token string">&quot; and type = ?&quot;</span><span class="token punctuation">;</span>  
  
        <span class="token comment">// ❤type非空非零时在最终执行查询时使用的 SQL 参数数组中添加参数  </span>
        sqlArgList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
  
    <span class="token comment">// 4、调用父类方法执行 SQL 语句  </span>
    <span class="token class-name">Long</span> count <span class="token operator">=</span> <span class="token function">getSingleValue</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span> sqlArgList<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
    <span class="token keyword">return</span> count<span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h2 id="_7、service方法-汇总分页数据" tabindex="-1"><a class="header-anchor" href="#_7、service方法-汇总分页数据" aria-hidden="true">#</a> 7、Service方法：汇总分页数据</h2><h3 id="_1接口方法-2" tabindex="-1"><a class="header-anchor" href="#_1接口方法-2" aria-hidden="true">#</a> ①接口方法</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>headline<span class="token punctuation">.</span>service<span class="token punctuation">.</span>api</span><span class="token punctuation">;</span>  
  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>headline<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>vo<span class="token punctuation">.</span></span><span class="token class-name">HeadlineQueryVo</span></span><span class="token punctuation">;</span>  
  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>  
  
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">NewsHeadlineService</span> <span class="token punctuation">{</span>  
  
    <span class="token doc-comment comment">/**  
     * 执行分页操作，封装为 Map 返回  
     * <span class="token keyword">@param</span> <span class="token parameter">headlineQueryVo</span>  
     * <span class="token keyword">@return</span>  
     */</span>    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">getNewsHeadlinePage</span><span class="token punctuation">(</span><span class="token class-name">HeadlineQueryVo</span> headlineQueryVo<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h3 id="_2实现方法-2" tabindex="-1"><a class="header-anchor" href="#_2实现方法-2" aria-hidden="true">#</a> ②实现方法</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>headline<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl</span><span class="token punctuation">;</span>  
  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>headline<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">NewsHeadLineDao</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>headline<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">NewsHeadlineDaoImpl</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>headline<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">NewsHeadline</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>headline<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>vo<span class="token punctuation">.</span></span><span class="token class-name">HeadlineQueryVo</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>headline<span class="token punctuation">.</span>service<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">NewsHeadlineService</span></span><span class="token punctuation">;</span>  
  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>  
  
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NewsHeadlineServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">NewsHeadlineService</span> <span class="token punctuation">{</span>  
  
    <span class="token keyword">private</span> <span class="token class-name">NewsHeadLineDao</span> newsHeadLineDao <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NewsHeadlineDaoImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
    <span class="token annotation punctuation">@Override</span>  
    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">getNewsHeadlinePage</span><span class="token punctuation">(</span><span class="token class-name">HeadlineQueryVo</span> headlineQueryVo<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
  
        <span class="token comment">// 1、查询页面所需要的数据  </span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">NewsHeadline</span><span class="token punctuation">&gt;</span></span> newsHeadlineList <span class="token operator">=</span> newsHeadLineDao<span class="token punctuation">.</span><span class="token function">selectNewsHeadlinePage</span><span class="token punctuation">(</span>  
                headlineQueryVo<span class="token punctuation">.</span><span class="token function">getKeyWords</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  
                headlineQueryVo<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  
                headlineQueryVo<span class="token punctuation">.</span><span class="token function">getPageNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  
                headlineQueryVo<span class="token punctuation">.</span><span class="token function">getPageSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  
        <span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
        <span class="token comment">// 2、查询总记录数  </span>
        <span class="token keyword">int</span> totalSize <span class="token operator">=</span> newsHeadLineDao<span class="token punctuation">.</span><span class="token function">selectNewsHeadlineCount</span><span class="token punctuation">(</span>headlineQueryVo<span class="token punctuation">.</span><span class="token function">getKeyWords</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> headlineQueryVo<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
        <span class="token comment">// 3、计算总页数  </span>
        <span class="token class-name">Integer</span> pageSize <span class="token operator">=</span> headlineQueryVo<span class="token punctuation">.</span><span class="token function">getPageSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
        <span class="token keyword">int</span> totalPage <span class="token operator">=</span> totalSize <span class="token operator">/</span> pageSize <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>totalSize <span class="token operator">%</span> pageSize <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
        <span class="token comment">// 4、组装 Map        Map&lt;String, Object&gt; pageMap = new HashMap&lt;&gt;();  </span>
  
        pageMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;pageData&quot;</span><span class="token punctuation">,</span> newsHeadlineList<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        pageMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;pageNum&quot;</span><span class="token punctuation">,</span> headlineQueryVo<span class="token punctuation">.</span><span class="token function">getPageNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        pageMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;pageSize&quot;</span><span class="token punctuation">,</span> headlineQueryVo<span class="token punctuation">.</span><span class="token function">getPageSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        pageMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;totalPage&quot;</span><span class="token punctuation">,</span> totalPage<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        pageMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;totalSize&quot;</span><span class="token punctuation">,</span> totalSize<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
        <span class="token keyword">return</span> pageMap<span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8、controller方法" tabindex="-1"><a class="header-anchor" href="#_8、controller方法" aria-hidden="true">#</a> 8、Controller方法</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>headline<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>headline<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">NewsType</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>headline<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>vo<span class="token punctuation">.</span></span><span class="token class-name">HeadlineQueryVo</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>headline<span class="token punctuation">.</span>service<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">NewsHeadlineService</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>headline<span class="token punctuation">.</span>service<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">NewsTypeService</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>headline<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">NewsHeadlineServiceImpl</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>headline<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">NewsTypeServiceImpl</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>headline<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">Result</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>headline<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">WebUtil</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ServletException</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">WebServlet</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletResponse</span></span><span class="token punctuation">;</span>  
  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>  
  
<span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span><span class="token string">&quot;/portal/*&quot;</span><span class="token punctuation">)</span>  
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PortalController</span> <span class="token keyword">extends</span> <span class="token class-name">BaseController</span><span class="token punctuation">{</span>  
  
    <span class="token keyword">private</span> <span class="token class-name">NewsHeadlineService</span> headlineService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NewsHeadlineServiceImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token keyword">private</span> <span class="token class-name">NewsTypeService</span> newsTypeService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NewsTypeServiceImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
      
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">findNewsPage</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>  
        <span class="token comment">// 1、读取请求体 JSON 获取前端发送过来的数据  </span>
        <span class="token class-name">HeadlineQueryVo</span> headlineQueryVo <span class="token operator">=</span> <span class="token class-name">WebUtil</span><span class="token punctuation">.</span><span class="token function">readJson</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token class-name">HeadlineQueryVo</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
        <span class="token comment">// 2、调用 Service 方法执行分页查询  </span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> pageMap <span class="token operator">=</span> headlineService<span class="token punctuation">.</span><span class="token function">getNewsHeadlinePage</span><span class="token punctuation">(</span>headlineQueryVo<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
        <span class="token comment">// 3、封装 Result 对象  </span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> pageInfoMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
        pageInfoMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;pageInfo&quot;</span><span class="token punctuation">,</span> pageMap<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
        <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span>pageInfoMap<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
        <span class="token comment">// 4、返回响应  </span>
        <span class="token class-name">WebUtil</span><span class="token punctuation">.</span><span class="token function">writeJson</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h1 id="二、显示头条详情" tabindex="-1"><a class="header-anchor" href="#二、显示头条详情" aria-hidden="true">#</a> 二、显示头条详情</h1><h1 id="三、登录检查" tabindex="-1"><a class="header-anchor" href="#三、登录检查" aria-hidden="true">#</a> 三、登录检查</h1><h1 id="四、新增" tabindex="-1"><a class="header-anchor" href="#四、新增" aria-hidden="true">#</a> 四、新增</h1><h1 id="五、删除" tabindex="-1"><a class="header-anchor" href="#五、删除" aria-hidden="true">#</a> 五、删除</h1><h1 id="六、修改" tabindex="-1"><a class="header-anchor" href="#六、修改" aria-hidden="true">#</a> 六、修改</h1><h1 id="七、事务" tabindex="-1"><a class="header-anchor" href="#七、事务" aria-hidden="true">#</a> 七、事务</h1><h2 id="_1、概念" tabindex="-1"><a class="header-anchor" href="#_1、概念" aria-hidden="true">#</a> 1、概念</h2><p>在实际开发中，很可能多条SQL语句，构成一个逻辑上的整体。 这个逻辑整体中的SQL语句，要生效就一起生效，有任何一条执行失败，整个逻辑整体都应该撤销。</p><br><h2 id="_2、事务的acid" tabindex="-1"><a class="header-anchor" href="#_2、事务的acid" aria-hidden="true">#</a> 2、事务的ACID</h2><ul><li>A：原子性 事务作为一个逻辑的整体是不可再分的。整体缺少任何一条SQL语句，逻辑就不成立。</li><li>C：一致性 事务中的多个操作，要生效就一起生效，有任何一条执行失败，整个逻辑整体都应该撤销。</li><li>I：隔离性 事务在并发操作过程中，能够彼此隔离，互不影响。</li><li>D：持久性 事务一旦提交，就在数据库中永久保存，无法再撤销。</li></ul><br><h2 id="_3、事务的并发执行" tabindex="-1"><a class="header-anchor" href="#_3、事务的并发执行" aria-hidden="true">#</a> 3、事务的并发执行</h2><h3 id="_1事务的并发问题" tabindex="-1"><a class="header-anchor" href="#_1事务的并发问题" aria-hidden="true">#</a> ①事务的并发问题</h3><ul><li>脏读：当前事务读取了其它事务尚未提交的修改，其它事务回滚之后，当前事务读取的数据就是错误的。</li><li>不可重复读：当前事务两次读取同一个数据，但是这两次读取的数据不相同，但数据都是正确的，是其它事务提交了的修改。</li><li>幻读：当前事务执行过程中，数据库表中的记录增加或减少了。</li></ul><br><h3 id="_2事务的隔离级别" tabindex="-1"><a class="header-anchor" href="#_2事务的隔离级别" aria-hidden="true">#</a> ②事务的隔离级别</h3><ul><li>读未提交：当前事务可以读取其它事务尚未提交的修改（不能解决任何并发问题）</li><li>读已提交：当前事务只读取其它事务已经提交的修改（能解决脏读的问题）</li><li>可重复读：当前事务执行过程中，要求多次读取到的数据都是一样的（能够解决脏读、不可重复读问题）</li><li>串行化：当前事务执行过程中，整个表不允许其它事务操作（能够解决所有并发问题，但是性能最差）</li></ul><br><h2 id="_4、java代码中实现事务控制" tabindex="-1"><a class="header-anchor" href="#_4、java代码中实现事务控制" aria-hidden="true">#</a> 4、Java代码中实现事务控制</h2><ul><li>编程式事务：自己写代码实现</li><li>声明式事务：通过在框架中配置实现</li></ul><br><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
	<span class="token comment">// 1、获取数据库连接</span>
	<span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span>
	
	<span class="token comment">// 2、开启事务（关闭事务的自动提交）</span>
	conn<span class="token punctuation">.</span><span class="token function">setAutoCommit</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token comment">// 3、执行SQL语句</span>
	<span class="token comment">// ...</span>

	<span class="token comment">// 4、执行成功，提交事务</span>
	conn<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token comment">// 5、执行失败，回滚事务</span>
	conn<span class="token punctuation">.</span><span class="token function">rollBack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token keyword">finally</span><span class="token punctuation">{</span>
	<span class="token comment">// 6、不管成功还是失败，释放资源……</span>
	<span class="token comment">// ...</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5、事务代码抽取" tabindex="-1"><a class="header-anchor" href="#_5、事务代码抽取" aria-hidden="true">#</a> 5、事务代码抽取</h2><p>如果每个需要事务的方法，都单独加事务，那么会造成大量冗余、重复的代码：<br></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>  
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">saveNewsHeadline</span><span class="token punctuation">(</span><span class="token class-name">NewsHeadline</span> newsHeadline<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
  
    <span class="token class-name">Connection</span> connection <span class="token operator">=</span> <span class="token class-name">JDBCUtils</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
      
    <span class="token keyword">try</span> <span class="token punctuation">{</span>  
        <span class="token comment">// 1、设置 NewsHeadline 对象的其它属性（前端没有提供的）  </span>
        newsHeadline<span class="token punctuation">.</span><span class="token function">setPageViews</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        newsHeadline<span class="token punctuation">.</span><span class="token function">setCreateTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        newsHeadline<span class="token punctuation">.</span><span class="token function">setUpdateTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        newsHeadline<span class="token punctuation">.</span><span class="token function">setIsDeleted</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
        <span class="token comment">// 2、调用 Dao 方法执行保存  </span>
        newsHeadLineDao<span class="token punctuation">.</span><span class="token function">insertNewsHeadline</span><span class="token punctuation">(</span>newsHeadline<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
        <span class="token comment">// 3、保存日志  </span>
        <span class="token class-name">NewsLog</span> newsLog <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NewsLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
        newsLog<span class="token punctuation">.</span><span class="token function">setLogContent</span><span class="token punctuation">(</span><span class="token string">&quot;saveNewsHeadline:&quot;</span> <span class="token operator">+</span> newsHeadline<span class="token punctuation">.</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> newsHeadline<span class="token punctuation">.</span><span class="token function">getPublisher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
        logDao<span class="token punctuation">.</span><span class="token function">insertLog</span><span class="token punctuation">(</span>newsLog<span class="token punctuation">)</span><span class="token punctuation">;</span>  
          
        connection<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        connection<span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>  
        <span class="token class-name">JDBCUtils</span><span class="token punctuation">.</span><span class="token function">releaseConnection</span><span class="token punctuation">(</span>connection<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><p>为了最大限度减少代码冗余，把事务代码抽取到了Filter：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>headline<span class="token punctuation">.</span>filter</span><span class="token punctuation">;</span>  
  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>headline<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">JDBCUtils</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">FilterChain</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">ServletException</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpFilter</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletResponse</span></span><span class="token punctuation">;</span>  
  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Connection</span></span><span class="token punctuation">;</span>  
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">SQLException</span></span><span class="token punctuation">;</span>  
  
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TransactionFilter</span> <span class="token keyword">extends</span> <span class="token class-name">HttpFilter</span> <span class="token punctuation">{</span>  
  
    <span class="token annotation punctuation">@Override</span>  
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">FilterChain</span> chain<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ServletException</span> <span class="token punctuation">{</span>  
        <span class="token comment">// 1、获取数据库连接  </span>
        <span class="token class-name">Connection</span> connection <span class="token operator">=</span> <span class="token class-name">JDBCUtils</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
        <span class="token keyword">try</span> <span class="token punctuation">{</span>  
            <span class="token comment">// 2、开启事务（把事务自动提交关闭）  </span>
            connection<span class="token punctuation">.</span><span class="token function">setAutoCommit</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
            <span class="token comment">// 3、直接放行  </span>
            chain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
            <span class="token comment">// 4、提交事务  </span>
            connection<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> throwable<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
  
            <span class="token comment">// 5、回滚事务  </span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>  
                connection<span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token punctuation">}</span>  
  
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>throwable<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>  
  
            <span class="token comment">// 6、释放数据库连接  </span>
            <span class="token class-name">JDBCUtils</span><span class="token punctuation">.</span><span class="token function">releaseConnection</span><span class="token punctuation">(</span>connection<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
        <span class="token punctuation">}</span>  
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><p>但是运行结果发现，事务没有生效。原因是：底层实际执行SQL语句用的并不是TransactionFilter中获取的数据库连接。</p><br><h2 id="_6、统一数据库连接" tabindex="-1"><a class="header-anchor" href="#_6、统一数据库连接" aria-hidden="true">#</a> 6、统一数据库连接</h2><h3 id="_1需求" tabindex="-1"><a class="header-anchor" href="#_1需求" aria-hidden="true">#</a> ①需求</h3><p>在一个事务中，执行各个SQL语句时，必须使用同一个数据库连接，事务才能生效。</p><br><h3 id="_2困难" tabindex="-1"><a class="header-anchor" href="#_2困难" aria-hidden="true">#</a> ②困难</h3><ul><li>最初获取数据库连接：TransactionFilter</li><li>使用数据库连接：BaseDao</li><li>通过给方法传参的方式传递数据库连接对象，无法做到</li></ul><br><h3 id="_3解决思路" tabindex="-1"><a class="header-anchor" href="#_3解决思路" aria-hidden="true">#</a> ③解决思路</h3><p>各个涉及数据库连接的方法虽然不能直接调用的，但是它们都在同一个线程上。 所以我们把数据库连接对象绑定到当前线程即可：</p><ul><li>TransactionFilter：把数据库连接对象绑定到当前线程</li><li>BaseDao：从当前线程获取数据库连接</li></ul><br><h3 id="_4具体实现" tabindex="-1"><a class="header-anchor" href="#_4具体实现" aria-hidden="true">#</a> ④具体实现</h3><p>重构现有的两个类：</p><ul><li>JDBCUtils</li><li>BaseDao</li></ul><h4 id="_1-jdbcutils" tabindex="-1"><a class="header-anchor" href="#_1-jdbcutils" aria-hidden="true">#</a> [1]JDBCUtils</h4><ul><li>增加了ThreadLocal：</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Connection</span><span class="token punctuation">&gt;</span></span> threadLocal <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**  
 * 从数据源中获取数据库连接  
 * <span class="token keyword">@return</span>  
 */</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Connection</span> <span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token keyword">try</span> <span class="token punctuation">{</span>  
  
        <span class="token comment">// 1、尝试从当前线程获取数据库连接  </span>
        <span class="token class-name">Connection</span> connection <span class="token operator">=</span> threadLocal<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
        <span class="token comment">// 2、判断数据库连接释放为空  </span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>connection <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
            <span class="token comment">// 3、从数据源中获取数据库连接  </span>
            connection <span class="token operator">=</span> dataSource<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
            <span class="token comment">// 4、绑定到当前线程上  </span>
            threadLocal<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>connection<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">}</span>  
  
        <span class="token keyword">return</span> connection<span class="token punctuation">;</span>  
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**  
 * 释放数据库连接，本质上是把数据库连接标记为空闲  
 * <span class="token keyword">@param</span> <span class="token parameter">connection</span>  
 */</span>  
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">releaseConnection</span><span class="token punctuation">(</span><span class="token class-name">Connection</span> connection<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token keyword">try</span> <span class="token punctuation">{</span>  
        <span class="token keyword">if</span> <span class="token punctuation">(</span>connection <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
            connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            threadLocal<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">}</span>  
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h4 id="_2-basedao" tabindex="-1"><a class="header-anchor" href="#_2-basedao" aria-hidden="true">#</a> [2]BaseDao</h4><ul><li>不做关闭数据库连接的操作：</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**  
 * 借助DBUtils实现的查询数据库表，每一条记录封装一个实体类对象，多条记录组成 List 集合  
 * <span class="token keyword">@param</span> <span class="token parameter">sql</span>  
 * <span class="token keyword">@param</span> <span class="token parameter">clazz</span> 当前要查询的实体类对象的 Class 对象  
 * <span class="token keyword">@param</span> <span class="token parameter">params</span>  
 * <span class="token keyword">@return</span> 查询结果组成的 List 集合  
 */</span>  
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">getBeanList</span><span class="token punctuation">(</span><span class="token class-name">String</span> sql<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> clazz<span class="token punctuation">,</span> <span class="token class-name">Object</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> params<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
  
    <span class="token comment">// 1、获取数据库连接  </span>
    <span class="token class-name">Connection</span> connection <span class="token operator">=</span> <span class="token class-name">JDBCUtils</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
    <span class="token keyword">try</span> <span class="token punctuation">{</span>  
        <span class="token comment">// 2、创建 ResultSetHandler 对象  </span>
        <span class="token class-name">ResultSetHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> resultSetHandler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BeanListHandler</span><span class="token punctuation">(</span>clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
        <span class="token comment">// 3、调用 QueryRunner 方法执行查询操作  </span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> beanList <span class="token operator">=</span> queryRunner<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>connection<span class="token punctuation">,</span> sql<span class="token punctuation">,</span> resultSetHandler<span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
        <span class="token keyword">return</span> beanList<span class="token punctuation">;</span>  
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span> <span class="token comment">/*finally {  
  
        // 4、释放资源  
        JDBCUtils.releaseConnection(connection);    
    }*/</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><p>体现关闭资源的原则：谁开的谁关。</p><br>`,96),o=[c];function l(i,u){return s(),a("div",null,o)}const d=n(t,[["render",l],["__file","微头条02.html.vue"]]);export{d as default};
