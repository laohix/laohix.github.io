import{_ as s,o as a,c as t,e as p}from"./app-8007fa1b.js";const e="/assets/1686635045559-3b00b2b4.png",n="/assets/add-8aea1308.gif",c="/assets/image-20230709085733615-d8ebe1e4.png",o="/assets/delete-77dc5a30.gif",l="/assets/check-a314693f.gif",i="/assets/checkAll-da051af0.gif",u="/assets/clear-2eb1a1c7.gif",r={},k=p('<h1 id="购物车模块" tabindex="-1"><a class="header-anchor" href="#购物车模块" aria-hidden="true">#</a> 购物车模块</h1><h1 id="_1-需求说明" tabindex="-1"><a class="header-anchor" href="#_1-需求说明" aria-hidden="true">#</a> 1 需求说明</h1><p>购物车模块存储顾客所选的的商品，记录下所选商品，当用户决定购买时，用户可以选择决定购买的商品进入结算页面。</p><p>购物车模块功能说明：</p><p>1、添加商品到购物车</p><p>2、查询购物车列表数据</p><p>3、删除购物车商品数据</p><p>4、更新选中商品状态</p><p>5、完成购物车商品的全选</p><p>6、清空购物车商品数据</p><p>数据存储：为了提高对购物车数据操作的性能，可以使用Redis【HASH】存储购物车数据。</p><p>页面效果：</p><p><img src="'+e+`" alt="68663504555"></p><h1 id="_2-环境搭建" tabindex="-1"><a class="header-anchor" href="#_2-环境搭建" aria-hidden="true">#</a> 2 环境搭建</h1><p>创建一个独立模块(service-cart)来完成购物车的相关功能。</p><p>步骤如下：</p><p>1、在spzx-service模块下创建一个service-cart模块，并加入如下的依赖：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-data-redis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、准备application.yml、application-dev.yml、logback-spring.xml文件。文件内容如下所示：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># application.yml</span>
<span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">profiles</span><span class="token punctuation">:</span>
    <span class="token key atrule">active</span><span class="token punctuation">:</span> dev
    
<span class="token comment"># application-dev.yml</span>
<span class="token key atrule">server</span><span class="token punctuation">:</span>
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8513</span>

<span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">application</span><span class="token punctuation">:</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> service<span class="token punctuation">-</span>cart
  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>
    <span class="token key atrule">nacos</span><span class="token punctuation">:</span>
      <span class="token key atrule">discovery</span><span class="token punctuation">:</span>
        <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> 192.168.136.142<span class="token punctuation">:</span><span class="token number">8848</span>
    <span class="token key atrule">sentinel</span><span class="token punctuation">:</span>
      <span class="token key atrule">transport</span><span class="token punctuation">:</span>
        <span class="token key atrule">dashboard</span><span class="token punctuation">:</span> localhost<span class="token punctuation">:</span><span class="token number">8080</span>
  <span class="token key atrule">data</span><span class="token punctuation">:</span>
    <span class="token key atrule">redis</span><span class="token punctuation">:</span>
      <span class="token key atrule">host</span><span class="token punctuation">:</span> 192.168.136.142
      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">6379</span>
      <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token number">1234</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>logback-spring.xml修改输出路径：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>log.path<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>D://work//service-cart//logs<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>3、创建启动类</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// com.atguigu.spzx.cart;</span>
<span class="token annotation punctuation">@SpringBootApplication</span><span class="token punctuation">(</span>exclude <span class="token operator">=</span> <span class="token class-name">DataSourceAutoConfiguration</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>  <span class="token comment">// 排除数据库的自动化配置，Cart微服务不需要访问数据库</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CartApplication</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">CartApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token punctuation">,</span> args<span class="token punctuation">)</span> <span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_3-添加购物车" tabindex="-1"><a class="header-anchor" href="#_3-添加购物车" aria-hidden="true">#</a> 3 添加购物车</h1><h2 id="_3-1-需求说明" tabindex="-1"><a class="header-anchor" href="#_3-1-需求说明" aria-hidden="true">#</a> 3.1 需求说明</h2><p>需求如下所示：</p><p>1、商品详情页加入购物车</p><p>2、加入购物车必须登录</p><p>加入购物车功能如图所示：</p><p><img src="`+n+`" alt="add"></p><p><strong>查看接口文档：</strong></p><p>添加购物车接口地址及返回结果</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>get api/order/cart/auth/addToCart/<span class="token punctuation">{</span>skuId<span class="token punctuation">}</span>/<span class="token punctuation">{</span>skuNum<span class="token punctuation">}</span>
返回结果：
<span class="token punctuation">{</span>
    <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
    <span class="token property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token string">&quot;操作成功&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：购物车页面加减商品数量与商品详情页加入购物车是同一个接口</p><p>请求响应流程如下所示：</p><p><img src="`+c+`" alt="image-20230709085733615"></p><h2 id="_3-2-远程调用接口开发" tabindex="-1"><a class="header-anchor" href="#_3-2-远程调用接口开发" aria-hidden="true">#</a> 3.2 远程调用接口开发</h2><p>在service-product微服务中提供一个远程调用接口，根据skuId查询ProductSku数据，操作模块：service-product。</p><h3 id="_3-2-1-productcontroller" tabindex="-1"><a class="header-anchor" href="#_3-2-1-productcontroller" aria-hidden="true">#</a> 3.2.1 ProductController</h3><p>表现层代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Operation</span><span class="token punctuation">(</span>summary <span class="token operator">=</span> <span class="token string">&quot;获取商品sku信息&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;getBySkuId/{skuId}&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ProductSku</span><span class="token punctuation">&gt;</span></span> <span class="token function">getBySkuId</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Parameter</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;skuId&quot;</span><span class="token punctuation">,</span> description <span class="token operator">=</span> <span class="token string">&quot;商品skuId&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">Long</span> skuId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ProductSku</span> productSku <span class="token operator">=</span> productService<span class="token punctuation">.</span><span class="token function">getBySkuId</span><span class="token punctuation">(</span>skuId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>productSku <span class="token punctuation">,</span> <span class="token class-name">ResultCodeEnum</span><span class="token punctuation">.</span><span class="token constant">SUCCESS</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-2-productservice" tabindex="-1"><a class="header-anchor" href="#_3-2-2-productservice" aria-hidden="true">#</a> 3.2.2 ProductService</h3><p>业务层代码实现：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//业务接口</span>
<span class="token class-name">ProductSku</span> <span class="token function">getBySkuId</span><span class="token punctuation">(</span><span class="token class-name">Long</span> skuId<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//业务接口实现</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">ProductSku</span> <span class="token function">getBySkuId</span><span class="token punctuation">(</span><span class="token class-name">Long</span> skuId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> productSkuMapper<span class="token punctuation">.</span><span class="token function">getById</span><span class="token punctuation">(</span>skuId<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动service-product微服务进行测试。</p><h2 id="_3-3-openfeign接口定义" tabindex="-1"><a class="header-anchor" href="#_3-3-openfeign接口定义" aria-hidden="true">#</a> 3.3 openFeign接口定义</h2><h3 id="_3-3-1-环境搭建" tabindex="-1"><a class="header-anchor" href="#_3-3-1-环境搭建" aria-hidden="true">#</a> 3.3.1 环境搭建</h3><p>步骤如下所示：</p><p>1、spzx-service-client模块创建：在spzx-parent下面创建该子模块spzx-service-client，并导入如下依赖：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.atguigu.spzx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>common-util<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>provided <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.atguigu.spzx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spzx-model<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>provided <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

    <span class="token comment">&lt;!-- openfeign依赖 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-openfeign<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

    <span class="token comment">&lt;!-- loadbalancer依赖 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-loadbalancer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：删除src目录</p><p>2、service-product-client模块创建：在spzx-service-client下面创建该子模块</p><h3 id="_3-3-2-接口定义" tabindex="-1"><a class="header-anchor" href="#_3-3-2-接口定义" aria-hidden="true">#</a> 3.3.2 接口定义</h3><p>在service-product-client定义针对service-product微服务的远程调用接口，如下所示：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// com.atguigu.spzx.feign.product;</span>
<span class="token annotation punctuation">@FeignClient</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;service-product&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ProductFeignClient</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/api/product/getBySkuId/{skuId}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ProductSku</span><span class="token punctuation">&gt;</span></span>  <span class="token function">getBySkuId</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">Long</span> skuId<span class="token punctuation">)</span> <span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-3-降级类定义" tabindex="-1"><a class="header-anchor" href="#_3-3-3-降级类定义" aria-hidden="true">#</a> 3.3.3 降级类定义</h3><p>针对该远程调用接口提供一个降级类，一旦远程调用接口调用发生异常以后执行降级逻辑。</p><p>步骤：</p><p>1、定义一个类实现ProductFeignClient接口</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// com.atguigu.spzx.feign.product.fallback</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ProductFeignClientFallback</span> <span class="token keyword">implements</span> <span class="token class-name">ProductFeignClient</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ProductSku</span><span class="token punctuation">&gt;</span></span> <span class="token function">getBySkuId</span><span class="token punctuation">(</span><span class="token class-name">Long</span> skuId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;ProductFeignClientFallback...getBySkuId的方法执行了&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token punctuation">,</span> <span class="token class-name">ResultCodeEnum</span><span class="token punctuation">.</span><span class="token constant">SUCCESS</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2、ProductFeignClient接口使用该降级类</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@FeignClient</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;service-product&quot;</span> <span class="token punctuation">,</span> fallback <span class="token operator">=</span> <span class="token class-name">ProductFeignClientFallback</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>3、将该接口通过Spring Boot的自动化配置原理，将其纳入到Spring容器中</p><p>在resources目录下创建一个MATE-INF/spring文件夹，在该文件夹下创建一个</p><p>org.springframework.boot.autoconfigure.AutoConfiguration.imports文件，文件的中的内容如下所示：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>spzx<span class="token punctuation">.</span>feign<span class="token punctuation">.</span>product<span class="token punctuation">.</span>fallback<span class="token punctuation">.</span></span>ProductFeignClientFallback</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_3-4-业务后端接口开发" tabindex="-1"><a class="header-anchor" href="#_3-4-业务后端接口开发" aria-hidden="true">#</a> 3.4 业务后端接口开发</h2><p>操作模块：service-cart</p><h3 id="_3-4-1-添加依赖" tabindex="-1"><a class="header-anchor" href="#_3-4-1-添加依赖" aria-hidden="true">#</a> 3.4.1 添加依赖</h3><p>在service-cart微服务中添加service-product-client接口的依赖：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.atguigu.spzx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>service-product-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-2-修改启动类" tabindex="-1"><a class="header-anchor" href="#_3-4-2-修改启动类" aria-hidden="true">#</a> 3.4.2 修改启动类</h3><p>在启动类上添加对应的注解</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootApplication</span><span class="token punctuation">(</span>exclude <span class="token operator">=</span> <span class="token class-name">DataSourceAutoConfiguration</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@EnableFeignClients</span><span class="token punctuation">(</span>basePackages <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;com.atguigu.spzx.feign.product&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@EnableUserWebMvcConfiguration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CartApplication</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">CartApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token punctuation">,</span> args<span class="token punctuation">)</span> <span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-3-cartinfo" tabindex="-1"><a class="header-anchor" href="#_3-4-3-cartinfo" aria-hidden="true">#</a> 3.4.3 CartInfo</h3><p>定义一个实体类来封装购物车中的商品数据(购物项数据)，该实体类的定义依据：购物车列表页面需要展示的数据。如下所示：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// com.atguigu.spzx.model.entity.h5;</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@Schema</span><span class="token punctuation">(</span>description <span class="token operator">=</span> <span class="token string">&quot;购物车实体类&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CartInfo</span> <span class="token keyword">extends</span> <span class="token class-name">BaseEntity</span> <span class="token punctuation">{</span>
   
   <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">1L</span><span class="token punctuation">;</span>

   <span class="token annotation punctuation">@Schema</span><span class="token punctuation">(</span>description <span class="token operator">=</span> <span class="token string">&quot;用户id&quot;</span><span class="token punctuation">)</span>
   <span class="token keyword">private</span> <span class="token class-name">Long</span> userId<span class="token punctuation">;</span>

   <span class="token annotation punctuation">@Schema</span><span class="token punctuation">(</span>description <span class="token operator">=</span> <span class="token string">&quot;skuid&quot;</span><span class="token punctuation">)</span>
   <span class="token keyword">private</span> <span class="token class-name">Long</span> skuId<span class="token punctuation">;</span>

   <span class="token annotation punctuation">@Schema</span><span class="token punctuation">(</span>description <span class="token operator">=</span> <span class="token string">&quot;放入购物车时价格&quot;</span><span class="token punctuation">)</span>
   <span class="token keyword">private</span> <span class="token class-name">BigDecimal</span> cartPrice<span class="token punctuation">;</span>

   <span class="token annotation punctuation">@Schema</span><span class="token punctuation">(</span>description <span class="token operator">=</span> <span class="token string">&quot;数量&quot;</span><span class="token punctuation">)</span>
   <span class="token keyword">private</span> <span class="token class-name">Integer</span> skuNum<span class="token punctuation">;</span>

   <span class="token annotation punctuation">@Schema</span><span class="token punctuation">(</span>description <span class="token operator">=</span> <span class="token string">&quot;图片文件&quot;</span><span class="token punctuation">)</span>
   <span class="token keyword">private</span> <span class="token class-name">String</span> imgUrl<span class="token punctuation">;</span>

   <span class="token annotation punctuation">@Schema</span><span class="token punctuation">(</span>description <span class="token operator">=</span> <span class="token string">&quot;sku名称 (冗余)&quot;</span><span class="token punctuation">)</span>
   <span class="token keyword">private</span> <span class="token class-name">String</span> skuName<span class="token punctuation">;</span>

   <span class="token annotation punctuation">@Schema</span><span class="token punctuation">(</span>description <span class="token operator">=</span> <span class="token string">&quot;isChecked&quot;</span><span class="token punctuation">)</span>
   <span class="token keyword">private</span> <span class="token class-name">Integer</span> isChecked<span class="token punctuation">;</span>
    
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-4-cartcontroller" tabindex="-1"><a class="header-anchor" href="#_3-4-4-cartcontroller" aria-hidden="true">#</a> 3.4.4 CartController</h3><p>表现层代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Tag</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;购物车接口&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@RestController</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;api/order/cart&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CartController</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">CartService</span> cartService<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Operation</span><span class="token punctuation">(</span>summary <span class="token operator">=</span> <span class="token string">&quot;添加购物车&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;auth/addToCart/{skuId}/{skuNum}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Result</span> <span class="token function">addToCart</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Parameter</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;skuId&quot;</span><span class="token punctuation">,</span> description <span class="token operator">=</span> <span class="token string">&quot;商品skuId&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;skuId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> skuId<span class="token punctuation">,</span>
                            <span class="token annotation punctuation">@Parameter</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;skuNum&quot;</span><span class="token punctuation">,</span> description <span class="token operator">=</span> <span class="token string">&quot;数量&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;skuNum&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> skuNum<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cartService<span class="token punctuation">.</span><span class="token function">addToCart</span><span class="token punctuation">(</span>skuId<span class="token punctuation">,</span> skuNum<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token class-name">ResultCodeEnum</span><span class="token punctuation">.</span><span class="token constant">SUCCESS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-5-cartservice" tabindex="-1"><a class="header-anchor" href="#_3-4-5-cartservice" aria-hidden="true">#</a> 3.4.5 CartService</h3><p>业务层代码实现：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//业务接口</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">CartService</span> <span class="token punctuation">{</span>
    <span class="token keyword">void</span> <span class="token function">addToCart</span><span class="token punctuation">(</span><span class="token class-name">Long</span> skuId<span class="token punctuation">,</span> <span class="token class-name">Integer</span> skuNum<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//业务接口实现</span>
<span class="token comment">// com.atguigu.spzx.cart.service.impl;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span></span><span class="token punctuation">;</span>

<span class="token comment">//业务接口实现</span>
<span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CartServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">CartService</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">RedisTemplate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span> <span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> redisTemplate<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">ProductFeignClient</span> productFeignClient<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">getCartKey</span><span class="token punctuation">(</span><span class="token class-name">Long</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//定义key user:cart:userId</span>
        <span class="token keyword">return</span> <span class="token string">&quot;user:cart:&quot;</span> <span class="token operator">+</span> userId<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addToCart</span><span class="token punctuation">(</span><span class="token class-name">Long</span> skuId<span class="token punctuation">,</span> <span class="token class-name">Integer</span> skuNum<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token comment">// 获取当前登录用户的id</span>
        <span class="token class-name">Long</span> userId <span class="token operator">=</span> <span class="token class-name">AuthContextUtil</span><span class="token punctuation">.</span><span class="token function">getUserInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> cartKey <span class="token operator">=</span> <span class="token function">getCartKey</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//获取缓存对象</span>
        <span class="token class-name">Object</span> cartInfoObj <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>cartKey<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>skuId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">CartInfo</span> cartInfo <span class="token operator">=</span> <span class="token keyword">null</span> <span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>cartInfoObj <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>       <span class="token comment">//  如果购物车中有该商品，则商品数量 相加！</span>
            cartInfo <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>cartInfoObj<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">,</span> <span class="token class-name">CartInfo</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
            cartInfo<span class="token punctuation">.</span><span class="token function">setSkuNum</span><span class="token punctuation">(</span>cartInfo<span class="token punctuation">.</span><span class="token function">getSkuNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> skuNum<span class="token punctuation">)</span><span class="token punctuation">;</span>
            cartInfo<span class="token punctuation">.</span><span class="token function">setIsChecked</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            cartInfo<span class="token punctuation">.</span><span class="token function">setUpdateTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>

            <span class="token comment">// 当购物车中没用该商品的时候，则直接添加到购物车！</span>
            cartInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CartInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// 购物车数据是从商品详情得到 {skuInfo}</span>
            <span class="token class-name">ProductSku</span> productSku <span class="token operator">=</span> productFeignClient<span class="token punctuation">.</span><span class="token function">getBySkuId</span><span class="token punctuation">(</span>skuId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
            cartInfo<span class="token punctuation">.</span><span class="token function">setCartPrice</span><span class="token punctuation">(</span>productSku<span class="token punctuation">.</span><span class="token function">getSalePrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            cartInfo<span class="token punctuation">.</span><span class="token function">setSkuNum</span><span class="token punctuation">(</span>skuNum<span class="token punctuation">)</span><span class="token punctuation">;</span>
            cartInfo<span class="token punctuation">.</span><span class="token function">setSkuId</span><span class="token punctuation">(</span>skuId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            cartInfo<span class="token punctuation">.</span><span class="token function">setUserId</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            cartInfo<span class="token punctuation">.</span><span class="token function">setImgUrl</span><span class="token punctuation">(</span>productSku<span class="token punctuation">.</span><span class="token function">getThumbImg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            cartInfo<span class="token punctuation">.</span><span class="token function">setSkuName</span><span class="token punctuation">(</span>productSku<span class="token punctuation">.</span><span class="token function">getSkuName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            cartInfo<span class="token punctuation">.</span><span class="token function">setIsChecked</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            cartInfo<span class="token punctuation">.</span><span class="token function">setCreateTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            cartInfo<span class="token punctuation">.</span><span class="token function">setUpdateTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span>

        <span class="token comment">// 将商品数据存储到购物车中</span>
        redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>cartKey <span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>skuId<span class="token punctuation">)</span> <span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>cartInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-6-修改配置文件" tabindex="-1"><a class="header-anchor" href="#_3-4-6-修改配置文件" aria-hidden="true">#</a> 3.4.6 修改配置文件</h3><p>在配置文件application-dev.yml中添加如下配置，完成openFeign和sentinel的整合：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">feign</span><span class="token punctuation">:</span>
  <span class="token key atrule">sentinel</span><span class="token punctuation">:</span>
    <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-7-服务网关配置" tabindex="-1"><a class="header-anchor" href="#_3-4-7-服务网关配置" aria-hidden="true">#</a> 3.4.7 服务网关配置</h3><p>在spzx-server-gateway微服务网关中配置service-cart微服务的路由规则：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>
    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>
      <span class="token key atrule">routes</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> service<span class="token punctuation">-</span>cart
          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//service<span class="token punctuation">-</span>cart
          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> Path=/api/order/cart/<span class="token important">**</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动服务进行测试。</p><h1 id="_4-购物车列表查询" tabindex="-1"><a class="header-anchor" href="#_4-购物车列表查询" aria-hidden="true">#</a> 4 购物车列表查询</h1><h2 id="_4-1-需求说明" tabindex="-1"><a class="header-anchor" href="#_4-1-需求说明" aria-hidden="true">#</a> 4.1 需求说明</h2><p>当用户在商品详情页面点击<strong>购物车</strong>按钮的时候，那么此时就需要将当前登录用户的所对应的所有的购物车数据在购物车页面展出出来。如下图所示：</p><p><img src="`+n+`" alt="add"></p><p><strong>查看接口文档：</strong></p><p>购物车列表接口地址及返回结果</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>get api/order/cart/auth/cartList
返回结果：
<span class="token punctuation">{</span>
    <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
    <span class="token property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token string">&quot;操作成功&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
            <span class="token property">&quot;createTime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-06-13 10:27:30&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;updateTime&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-06-13 11:21:23&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;isDeleted&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
            <span class="token property">&quot;userId&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token property">&quot;skuId&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
            <span class="token property">&quot;cartPrice&quot;</span><span class="token operator">:</span> <span class="token number">1999.00</span><span class="token punctuation">,</span>
            <span class="token property">&quot;skuNum&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
            <span class="token property">&quot;imgUrl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://139.198.127.41:9000/spzx/20230525/665832167-1_u_1.jpg&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;skuName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;小米 红米Note10 5G手机 颜色:黑色 内存:8G&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;isChecked&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        ...
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-2-后端接口" tabindex="-1"><a class="header-anchor" href="#_4-2-后端接口" aria-hidden="true">#</a> 4.2 后端接口</h2><h3 id="_4-2-1-cartcontroller" tabindex="-1"><a class="header-anchor" href="#_4-2-1-cartcontroller" aria-hidden="true">#</a> 4.2.1 CartController</h3><p>表现层代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Operation</span><span class="token punctuation">(</span>summary <span class="token operator">=</span> <span class="token string">&quot;查询购物车&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;auth/cartList&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">CartInfo</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">cartList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CartInfo</span><span class="token punctuation">&gt;</span></span> cartInfoList <span class="token operator">=</span> cartService<span class="token punctuation">.</span><span class="token function">getCartList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>cartInfoList<span class="token punctuation">,</span> <span class="token class-name">ResultCodeEnum</span><span class="token punctuation">.</span><span class="token constant">SUCCESS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-2-cartservice" tabindex="-1"><a class="header-anchor" href="#_4-2-2-cartservice" aria-hidden="true">#</a> 4.2.2 CartService</h3><p>业务层代码实现：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//业务接口</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CartInfo</span><span class="token punctuation">&gt;</span></span> <span class="token function">getCartList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//业务接口实现</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CartInfo</span><span class="token punctuation">&gt;</span></span> <span class="token function">getCartList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token comment">// 获取当前登录的用户信息</span>
        <span class="token class-name">Long</span> userId <span class="token operator">=</span> <span class="token class-name">AuthContextUtil</span><span class="token punctuation">.</span><span class="token function">getUserInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> cartKey <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getCartKey</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 获取数据</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> cartInfoList <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>cartKey<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">CollectionUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>cartInfoList<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CartInfo</span><span class="token punctuation">&gt;</span></span> infoList <span class="token operator">=</span> cartInfoList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>cartInfoJSON <span class="token operator">-&gt;</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>cartInfoJSON<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">CartInfo</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">sorted</span><span class="token punctuation">(</span><span class="token punctuation">(</span>o1<span class="token punctuation">,</span> o2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> o2<span class="token punctuation">.</span><span class="token function">getCreateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>o1<span class="token punctuation">.</span><span class="token function">getCreateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> infoList <span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_5-删除购物车商品" tabindex="-1"><a class="header-anchor" href="#_5-删除购物车商品" aria-hidden="true">#</a> 5 删除购物车商品</h1><h2 id="_5-1-需求说明" tabindex="-1"><a class="header-anchor" href="#_5-1-需求说明" aria-hidden="true">#</a> 5.1 需求说明</h2><p>删除功能如图所示：</p><p><img src="`+o+`" alt="delete"></p><p><strong>查看接口文档：</strong></p><p>删除购物车商品接口地址及返回结果</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>get api/order/cart/auth/deleteCart/<span class="token punctuation">{</span>skuId<span class="token punctuation">}</span>
返回结果：
<span class="token punctuation">{</span>
    <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
    <span class="token property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token string">&quot;操作成功&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-2-后端接口" tabindex="-1"><a class="header-anchor" href="#_5-2-后端接口" aria-hidden="true">#</a> 5.2 后端接口</h2><h3 id="_5-2-1-cartcontroller" tabindex="-1"><a class="header-anchor" href="#_5-2-1-cartcontroller" aria-hidden="true">#</a> 5.2.1 CartController</h3><p>表现层代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Operation</span><span class="token punctuation">(</span>summary <span class="token operator">=</span> <span class="token string">&quot;删除购物车商品&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@DeleteMapping</span><span class="token punctuation">(</span><span class="token string">&quot;auth/deleteCart/{skuId}&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">Result</span> <span class="token function">deleteCart</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Parameter</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;skuId&quot;</span><span class="token punctuation">,</span> description <span class="token operator">=</span> <span class="token string">&quot;商品skuId&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;skuId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> skuId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    cartService<span class="token punctuation">.</span><span class="token function">deleteCart</span><span class="token punctuation">(</span>skuId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token class-name">ResultCodeEnum</span><span class="token punctuation">.</span><span class="token constant">SUCCESS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-2-2-cartservice" tabindex="-1"><a class="header-anchor" href="#_5-2-2-cartservice" aria-hidden="true">#</a> 5.2.2 CartService</h3><p>业务层代码实现：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//业务接口</span>
<span class="token keyword">void</span> <span class="token function">deleteCart</span><span class="token punctuation">(</span><span class="token class-name">Long</span> skuId<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//业务接口实现</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteCart</span><span class="token punctuation">(</span><span class="token class-name">Long</span> skuId<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token comment">// 获取当前登录的用户数据</span>
    <span class="token class-name">Long</span> userId <span class="token operator">=</span> <span class="token class-name">AuthContextUtil</span><span class="token punctuation">.</span><span class="token function">getUserInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> cartKey <span class="token operator">=</span> <span class="token function">getCartKey</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//获取缓存对象</span>
    redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>cartKey  <span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>skuId<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_6-更新选中商品状态" tabindex="-1"><a class="header-anchor" href="#_6-更新选中商品状态" aria-hidden="true">#</a> 6 更新选中商品状态</h1><h2 id="_6-1-需求说明" tabindex="-1"><a class="header-anchor" href="#_6-1-需求说明" aria-hidden="true">#</a> 6.1 需求说明</h2><p>更新选中商品状态功能如图所示：</p><p><img src="`+l+`" alt="check"></p><p><strong>查看接口文档：</strong></p><p>更新选中商品状态接口地址及返回结果</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>get api/order/cart/auth/checkCart/<span class="token punctuation">{</span>skuId<span class="token punctuation">}</span>/<span class="token punctuation">{</span>isChecked<span class="token punctuation">}</span>
返回结果：
<span class="token punctuation">{</span>
    <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
    <span class="token property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token string">&quot;操作成功&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-2-后端接口" tabindex="-1"><a class="header-anchor" href="#_6-2-后端接口" aria-hidden="true">#</a> 6.2 后端接口</h2><h3 id="_6-2-1-cartcontroller" tabindex="-1"><a class="header-anchor" href="#_6-2-1-cartcontroller" aria-hidden="true">#</a> 6.2.1 CartController</h3><p>表现层代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Operation</span><span class="token punctuation">(</span>summary<span class="token operator">=</span><span class="token string">&quot;更新购物车商品选中状态&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/auth/checkCart/{skuId}/{isChecked}&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">Result</span> <span class="token function">checkCart</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Parameter</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;skuId&quot;</span><span class="token punctuation">,</span> description <span class="token operator">=</span> <span class="token string">&quot;商品skuId&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;skuId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> skuId<span class="token punctuation">,</span>
                        <span class="token annotation punctuation">@Parameter</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;isChecked&quot;</span><span class="token punctuation">,</span> description <span class="token operator">=</span> <span class="token string">&quot;是否选中 1:选中 0:取消选中&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;isChecked&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> isChecked<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    cartService<span class="token punctuation">.</span><span class="token function">checkCart</span><span class="token punctuation">(</span>skuId<span class="token punctuation">,</span> isChecked<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token class-name">ResultCodeEnum</span><span class="token punctuation">.</span><span class="token constant">SUCCESS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-2-2-cartservice" tabindex="-1"><a class="header-anchor" href="#_6-2-2-cartservice" aria-hidden="true">#</a> 6.2.2 CartService</h3><p>业务层代码实现：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//业务接口</span>
<span class="token keyword">void</span> <span class="token function">checkCart</span><span class="token punctuation">(</span><span class="token class-name">Long</span> skuId<span class="token punctuation">,</span> <span class="token class-name">Integer</span> isChecked<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//业务接口实现</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">checkCart</span><span class="token punctuation">(</span><span class="token class-name">Long</span> skuId<span class="token punctuation">,</span> <span class="token class-name">Integer</span> isChecked<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token comment">// 获取当前登录的用户数据</span>
    <span class="token class-name">Long</span> userId <span class="token operator">=</span> <span class="token class-name">AuthContextUtil</span><span class="token punctuation">.</span><span class="token function">getUserInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> cartKey <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getCartKey</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Boolean</span> hasKey <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasKey</span><span class="token punctuation">(</span>cartKey<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>skuId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>hasKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> cartInfoJSON <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>cartKey<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>skuId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">CartInfo</span> cartInfo <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>cartInfoJSON<span class="token punctuation">,</span> <span class="token class-name">CartInfo</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        cartInfo<span class="token punctuation">.</span><span class="token function">setIsChecked</span><span class="token punctuation">(</span>isChecked<span class="token punctuation">)</span><span class="token punctuation">;</span>
        redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>cartKey <span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>skuId<span class="token punctuation">)</span> <span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>cartInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_7-完成购物车商品的全选" tabindex="-1"><a class="header-anchor" href="#_7-完成购物车商品的全选" aria-hidden="true">#</a> 7 完成购物车商品的全选</h1><h2 id="_7-1-需求说明" tabindex="-1"><a class="header-anchor" href="#_7-1-需求说明" aria-hidden="true">#</a> 7.1 需求说明</h2><p>更新购物车商品全部选中状态功能如图所示：</p><p><img src="`+i+`" alt="checkAll"></p><p><strong>查看接口文档：</strong></p><p>更新购物车商品全部选中状态接口地址及返回结果</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>get api/order/cart/auth/allCheckCart/<span class="token punctuation">{</span>isChecked<span class="token punctuation">}</span>
返回结果：
<span class="token punctuation">{</span>
    <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
    <span class="token property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token string">&quot;操作成功&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-2-后端接口" tabindex="-1"><a class="header-anchor" href="#_7-2-后端接口" aria-hidden="true">#</a> 7.2 后端接口</h2><h3 id="_7-2-1-cartcontroller" tabindex="-1"><a class="header-anchor" href="#_7-2-1-cartcontroller" aria-hidden="true">#</a> 7.2.1 CartController</h3><p>表现层代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Operation</span><span class="token punctuation">(</span>summary<span class="token operator">=</span><span class="token string">&quot;更新购物车商品全部选中状态&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/auth/allCheckCart/{isChecked}&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">Result</span> <span class="token function">allCheckCart</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Parameter</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;isChecked&quot;</span><span class="token punctuation">,</span> description <span class="token operator">=</span> <span class="token string">&quot;是否选中 1:选中 0:取消选中&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;isChecked&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> isChecked<span class="token punctuation">)</span><span class="token punctuation">{</span>
    cartService<span class="token punctuation">.</span><span class="token function">allCheckCart</span><span class="token punctuation">(</span>isChecked<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token class-name">ResultCodeEnum</span><span class="token punctuation">.</span><span class="token constant">SUCCESS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-2-2-cartservice" tabindex="-1"><a class="header-anchor" href="#_7-2-2-cartservice" aria-hidden="true">#</a> 7.2.2 CartService</h3><p>业务层代码实现：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//业务接口</span>
<span class="token keyword">void</span> <span class="token function">allCheckCart</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> isChecked<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//业务接口实现</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">allCheckCart</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> isChecked<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token comment">// 获取当前登录的用户数据</span>
    <span class="token class-name">Long</span> userId <span class="token operator">=</span> <span class="token class-name">AuthContextUtil</span><span class="token punctuation">.</span><span class="token function">getUserInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> cartKey <span class="token operator">=</span> <span class="token function">getCartKey</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 获取所有的购物项数据</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> objectList <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>cartKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">CollectionUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>objectList<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        objectList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>cartInfoJSON <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">CartInfo</span> cartInfo <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>cartInfoJSON<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">CartInfo</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            cartInfo<span class="token punctuation">.</span><span class="token function">setIsChecked</span><span class="token punctuation">(</span>isChecked<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> cartInfo <span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>cartInfo <span class="token operator">-&gt;</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>cartKey <span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>cartInfo<span class="token punctuation">.</span><span class="token function">getSkuId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>cartInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_8-清空购物车" tabindex="-1"><a class="header-anchor" href="#_8-清空购物车" aria-hidden="true">#</a> 8 清空购物车</h1><h2 id="_8-1-需求说明" tabindex="-1"><a class="header-anchor" href="#_8-1-需求说明" aria-hidden="true">#</a> 8.1 需求说明</h2><p>清空购物车功能如图所示：</p><p><img src="`+u+`" alt="clear"></p><p><strong>查看接口文档：</strong></p><p>清空购物车接口地址及返回结果</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>get api/order/cart/auth/clearCart
返回结果：
<span class="token punctuation">{</span>
    <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
    <span class="token property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token string">&quot;操作成功&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-2-后端接口" tabindex="-1"><a class="header-anchor" href="#_8-2-后端接口" aria-hidden="true">#</a> 8.2 后端接口</h2><h3 id="_8-2-1-cartcontroller" tabindex="-1"><a class="header-anchor" href="#_8-2-1-cartcontroller" aria-hidden="true">#</a> 8.2.1 CartController</h3><p>表现层代码：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Operation</span><span class="token punctuation">(</span>summary<span class="token operator">=</span><span class="token string">&quot;清空购物车&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/auth/clearCart&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">Result</span> <span class="token function">clearCart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    cartService<span class="token punctuation">.</span><span class="token function">clearCart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token class-name">ResultCodeEnum</span><span class="token punctuation">.</span><span class="token constant">SUCCESS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-2-2-cartservice" tabindex="-1"><a class="header-anchor" href="#_8-2-2-cartservice" aria-hidden="true">#</a> 8.2.2 CartService</h3><p>业务层代码实现：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//业务接口</span>
<span class="token keyword">void</span> <span class="token function">clearCart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//业务接口实现</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">clearCart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Long</span> userId <span class="token operator">=</span> <span class="token class-name">AuthContextUtil</span><span class="token punctuation">.</span><span class="token function">getUserInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> cartKey <span class="token operator">=</span> <span class="token function">getCartKey</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    redisTemplate<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>cartKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,161),d=[k];function v(m,g){return a(),t("div",null,d)}const h=s(r,[["render",v],["__file","day16课件.html.vue"]]);export{h as default};
