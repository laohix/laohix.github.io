import{_ as e,r as o,o as c,c as i,a as n,d as s,b as t,e as p}from"./app-8007fa1b.js";const l="/assets/1690271938823-c1373d62.png",u="/assets/1690271862595-bcd7e15c.png",k="/assets/1690275090939-a84f5a11.png",r="/assets/1690333768492-412caaad.png",d="/assets/1690333796357-34b95f43.png",m="/assets/1690334089395-5b75ff5a.png",v="/assets/1690334469440-c6cb22ad.png",b="/assets/1690334574374-a08bd2ad.png",g="/assets/1690334730419-f3ce2018.png",h="/assets/1690334785146-164c73b1.png",f="/assets/1690334936907-8d5a011d.png",w="/assets/1690335937890-1912c25c.png",y="/assets/1690335907689-0a3e36fd.png",S="/assets/1690338477089-419f711b.png",_="/assets/1690338583518-10456e8b.png",q="/assets/1690338615625-bce34813.png",L="/assets/1690338814304-40133daa.png",x="/assets/1690338870566-ce9355b5.png",I="/assets/1690338917692-98ff94ff.png",R="/assets/1690339025805-ab4a0917.png",U="/assets/1690340237507-f18c8bd8.png",T="/assets/1690340343024-9b6b5114.png",M="/assets/1690353112122-10be0b66.png",j="/assets/1690353260568-83d1ed9e.png",C="/assets/1690353352499-80a69600.png",E="/assets/1690356431336-804956ec.png",A="/assets/1690356476100-292c0137.png",O="/assets/1690356547252-a0f2878b.png",W="/assets/1690356966718-1c74d830.png",P="/assets/1690360336039-a872e0ed.png",D="/assets/1690358425755-c8cdd16b.png",N="/assets/1690358566700-dc9026dc.png",F={},H=p('<h1 id="_1-开通直播" tabindex="-1"><a class="header-anchor" href="#_1-开通直播" aria-hidden="true">#</a> 1 开通直播</h1><h2 id="_1-1-需求说明" tabindex="-1"><a class="header-anchor" href="#_1-1-需求说明" aria-hidden="true">#</a> 1.1 需求说明</h2><p>直播的火爆相信大家有目共睹，它和短视频平台作为近几年最为火爆的行业，究其原因离不开它们的社交属性，尤其是直播平台，它被各个行业广泛应用，时至今日直播已经成为了我们生活中的一部分，甚至于到了人人直播的地步，下至未成年上至老年人，直播凭借着其自身社交性、互动性吸引了大量的关注，那么今天我们就来探索一下直播背后的奥秘。</p><p>当前我们要实现直播最核心的两个功能：</p><p>1、主播创建直播，普通用户观看直播</p><p>2、直播间可以进行实时互动：即时聊天</p><p>实现思路：</p><p>1、直播我们可以基于腾讯云云直播平台实现</p><p>2、即时聊天我们可以基于websocket实现</p><h2 id="_1-2-开通腾讯云云直播" tabindex="-1"><a class="header-anchor" href="#_1-2-开通腾讯云云直播" aria-hidden="true">#</a> 1.2 开通腾讯云云直播</h2><h3 id="_1-2-1-登录腾讯云" tabindex="-1"><a class="header-anchor" href="#_1-2-1-登录腾讯云" aria-hidden="true">#</a> 1.2.1 登录腾讯云</h3><p>腾讯云地址：https://cloud.tencent.com/login</p><p>微信扫码登录</p><p><img src="'+l+'" alt="69027193882"></p><h3 id="_1-2-2-云直播地址" tabindex="-1"><a class="header-anchor" href="#_1-2-2-云直播地址" aria-hidden="true">#</a> 1.2.2 云直播地址</h3><p>云直播地址：https://cloud.tencent.com/product/css</p><p>选择“立即使用”，开通“云直播”</p><p><img src="'+u+'" alt="69027186259"></p><h2 id="_1-3-配置云直播" tabindex="-1"><a class="header-anchor" href="#_1-3-配置云直播" aria-hidden="true">#</a> 1.3 配置云直播</h2><h3 id="_1-3-1-直播基础知识" tabindex="-1"><a class="header-anchor" href="#_1-3-1-直播基础知识" aria-hidden="true">#</a> 1.3.1 直播基础知识</h3><p>最原始的直播系统其实并没有想象的那么复杂，无非就是主播端将音视频数据推送到服务器，观众端则从服务器拉取数据播放。</p><h4 id="产品架构" tabindex="-1"><a class="header-anchor" href="#产品架构" aria-hidden="true">#</a> 产品架构</h4><p>通过下面这个数据流程图，能清晰地看到整个直播的过程。</p><p><img src="'+k+'" alt="69027509093"></p><h4 id="直播推流" tabindex="-1"><a class="header-anchor" href="#直播推流" aria-hidden="true">#</a> 直播推流</h4><p>推流，是直播中的一个术语，意思是将流媒体数据推送到服务器。如何推流，关键就在于使用的推流协议。</p><p>官方文档：https://cloud.tencent.com/document/product/267/32732</p><p>说明：我们项目为微信小程序，微信小程序可以使用微信推流插件实现推流，但是微信小程序推流要求资质高并且收费，因此我们项目采用H5的方式，使用WebRTC协议进行推流，故直播部分使用H5开发。</p>',28),B=n("thead",null,[n("tr",null,[n("th",null,"功能名称"),n("th",null,"功能简介")])],-1),G={href:"https://cloud.tencent.com/document/product/267/7968#.E6.94.AF.E6.8C.81.E5.93.AA.E4.BA.9B.E6.8E.A8.E6.B5.81.E5.8D.8F.E8.AE.AE.EF.BC.9F",target:"_blank",rel:"noopener noreferrer"},V=n("td",null,"支持 RTMP 和 WebRTC 协议进行推流。",-1),K={href:"https://cloud.tencent.com/document/product/267/32732",target:"_blank",rel:"noopener noreferrer"},J=n("td",null,"支持集成腾讯云直播 iOS、Android、Web 的腾讯云视立方·直播 SDK，以及常见的第三方推流软件，包括 OBS、XSplit、FMLE 等进行推流。",-1),Y=n("tr",null,[n("td",null,"推流设备"),n("td",null,"支持常见的第三方 RTMP 推流硬件和编码器或盒子等设备。")],-1),X=n("h4",{id:"直播播放",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#直播播放","aria-hidden":"true"},"#"),s(" 直播播放")],-1),Z=n("p",null,"官方文档：https://cloud.tencent.com/document/product/267/32733",-1),z=n("p",null,"播放即拉流，指的是「观众端」流媒体数据的拉取，同样也需要通过约定的拉流协议来拉取。",-1),Q=n("thead",null,[n("tr",null,[n("th",null,"功能名称"),n("th",null,"功能简介")])],-1),$={href:"https://cloud.tencent.com/document/product/267/7968#.E6.94.AF.E6.8C.81.E5.93.AA.E4.BA.9B.E6.92.AD.E6.94.BE.E5.8D.8F.E8.AE.AE.EF.BC.9F",target:"_blank",rel:"noopener noreferrer"},nn=n("td",null,"支持 RTMP、FLV、HLS 及 UDP 播放协议。",-1),sn={href:"https://cloud.tencent.com/document/product/267/32733",target:"_blank",rel:"noopener noreferrer"},an=n("td",null,"支持集成腾讯云直播 iOS、Android、Web 的腾讯云视立方·直播 SDK，以及常见的第三方 FLV、RTMP、HLS 播放器进行播放。",-1),tn=n("tr",null,[n("td",null,"播放控制"),n("td",null,"可播放与输入流规格一致的原始码流，或播放经过实时转码的码流。")],-1),pn=p('<h3 id="_1-3-2-配置域名" tabindex="-1"><a class="header-anchor" href="#_1-3-2-配置域名" aria-hidden="true">#</a> 1.3.2 配置域名</h3><p>打开云直播控制台，概述 ==》 新手接入指导</p><p><img src="'+r+'" alt="69033376849"></p><p>点击“新手接入指导”</p><p><img src="'+d+'" alt="69033379635"></p><p>按照官方文档引导配置“推流域名”与“播放域名”，过程比较繁琐，请认真阅读并配置；</p><p>腾讯云一般会赠送你一个“推流域名”，大家可以直接使用，只需要配置一个“播放域名”，配置好后如图：</p><p><img src="'+m+'" alt="69033408939"></p><h3 id="_1-3-3-直播推流" tabindex="-1"><a class="header-anchor" href="#_1-3-3-直播推流" aria-hidden="true">#</a> 1.3.3 直播推流</h3><p>当前已配置好域名，可以测试推流</p><h4 id="步骤一-web推流" tabindex="-1"><a class="header-anchor" href="#步骤一-web推流" aria-hidden="true">#</a> 步骤一：Web推流</h4><p>常用工具 ==》 Web推流</p><p><img src="'+v+'" alt="69033446944"></p><h4 id="步骤二-开启摄像头与麦克风" tabindex="-1"><a class="header-anchor" href="#步骤二-开启摄像头与麦克风" aria-hidden="true">#</a> 步骤二：开启摄像头与麦克风</h4><p><img src="'+b+'" alt="69033457437"></p><h4 id="步骤三-生成推流地址" tabindex="-1"><a class="header-anchor" href="#步骤三-生成推流地址" aria-hidden="true">#</a> 步骤三：生成推流地址</h4><p>快速生成</p><p><img src="'+g+'" alt="69033473041"></p><p>生成结课</p><p><img src="'+h+'" alt="69033478514"></p><p>点击“开始推流”，然后查看控制台“流管理”，如果流管理出现记录，说明推流成功</p><h4 id="步骤四-查看推流" tabindex="-1"><a class="header-anchor" href="#步骤四-查看推流" aria-hidden="true">#</a> 步骤四：查看推流</h4><p>新开一个网页查看推流，推流不能断</p><p><img src="'+f+'" alt="69033493690"></p><h4 id="步骤五-直播播放" tabindex="-1"><a class="header-anchor" href="#步骤五-直播播放" aria-hidden="true">#</a> 步骤五：直播播放</h4><p>流管理，点击预览，即可看见直播内容</p><h4 id="步骤六-总结" tabindex="-1"><a class="header-anchor" href="#步骤六-总结" aria-hidden="true">#</a> 步骤六：总结</h4><p>只要我们生成好直播推流地址，使用推流工具，即可完成推流，播放也是同理，只要有播放地址，我们就可以观看直播播放。</p><h2 id="_1-4-生成直播地址" tabindex="-1"><a class="header-anchor" href="#_1-4-生成直播地址" aria-hidden="true">#</a> 1.4 生成直播地址</h2><p>自主拼装直播 URL官方地址：https://cloud.tencent.com/document/product/267/32720</p><h3 id="_1-4-1-推流地址生成" tabindex="-1"><a class="header-anchor" href="#_1-4-1-推流地址生成" aria-hidden="true">#</a> 1.4.1 推流地址生成</h3><h4 id="步骤一-官方示例代码" tabindex="-1"><a class="header-anchor" href="#步骤一-官方示例代码" aria-hidden="true">#</a> 步骤一：官方示例代码</h4><p>腾讯云已经给我们提供了推流地址的示例代码，我们直接使用即可</p>',33),en=n("strong",null,"云直播控制台",-1),on={href:"https://console.cloud.tencent.com/live/domainmanage",target:"_blank",rel:"noopener noreferrer"},cn=n("strong",null,"域名管理",-1),ln=n("strong",null,"管理==>推流配置",-1),un=n("strong",null,"推流地址示例代码",-1),kn=p('<p><img src="'+w+'" alt="69033593789"></p><p>点击“管理”，如图：</p><p><img src="'+y+`" alt="69033590768"></p><h4 id="步骤二-调整及运行示例代码" tabindex="-1"><a class="header-anchor" href="#步骤二-调整及运行示例代码" aria-hidden="true">#</a> 步骤二：调整及运行示例代码</h4><p>根据示例代码，我们改造一个推流地址</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>tingshu<span class="token punctuation">.</span>live<span class="token punctuation">.</span>util</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">UnsupportedEncodingException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">MessageDigest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">NoSuchAlgorithmException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">LocalDateTime</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">ZoneOffset</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//域名管理中点击推流域名--&gt;推流配置--&gt;鉴权配置--&gt;主KEY</span>
        <span class="token class-name">String</span> key <span class="token operator">=</span> <span class="token string">&quot;89a97ccfdca7784b8b75fcd486f63520&quot;</span><span class="token punctuation">;</span>
        <span class="token comment">//流名称，后续为直播房间号</span>
        <span class="token class-name">String</span> streamName <span class="token operator">=</span> <span class="token string">&quot;room1&quot;</span><span class="token punctuation">;</span>
        <span class="token comment">//过期时间</span>
        <span class="token class-name">LocalDateTime</span> localDateTime <span class="token operator">=</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> nowTime <span class="token operator">=</span> localDateTime<span class="token punctuation">.</span><span class="token function">toEpochSecond</span><span class="token punctuation">(</span><span class="token class-name">ZoneOffset</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;+8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> txTime <span class="token operator">=</span> nowTime <span class="token operator">+</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">12</span><span class="token punctuation">;</span> <span class="token comment">// 默认12小时</span>

        <span class="token class-name">String</span> safeUrl <span class="token operator">=</span> <span class="token function">getSafeUrl</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> streamName<span class="token punctuation">,</span> txTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>safeUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">//推流地址</span>
        <span class="token class-name">String</span> pushUrl <span class="token operator">=</span> <span class="token string">&quot;webrtc://166120.livepush.myqcloud.com/live/&quot;</span> <span class="token operator">+</span> streamName <span class="token operator">+</span> <span class="token string">&quot;?&quot;</span> <span class="token operator">+</span> safeUrl<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>pushUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token constant">DIGITS_LOWER</span> <span class="token operator">=</span>
            <span class="token punctuation">{</span><span class="token char">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;e&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;f&#39;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token comment">/*
     * KEY+ streamName + txTime
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">getSafeUrl</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">,</span> <span class="token class-name">String</span> streamName<span class="token punctuation">,</span> <span class="token keyword">long</span> txTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> input <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
                <span class="token function">append</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">.</span>
                <span class="token function">append</span><span class="token punctuation">(</span>streamName<span class="token punctuation">)</span><span class="token punctuation">.</span>
                <span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span>txTime<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">String</span> txSecret <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">MessageDigest</span> messageDigest <span class="token operator">=</span> <span class="token class-name">MessageDigest</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">&quot;MD5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            txSecret  <span class="token operator">=</span> <span class="token function">byteArrayToHexString</span><span class="token punctuation">(</span>
                    messageDigest<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span>input<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NoSuchAlgorithmException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">UnsupportedEncodingException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> txSecret <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token string">&quot;&quot;</span> <span class="token operator">:</span>
                <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
                        <span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;txSecret=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
                        <span class="token function">append</span><span class="token punctuation">(</span>txSecret<span class="token punctuation">)</span><span class="token punctuation">.</span>
                        <span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;&amp;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
                        <span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;txTime=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
                        <span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span>txTime<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
                        <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">byteArrayToHexString</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> out <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span>data<span class="token punctuation">.</span>length <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> data<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            out<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant">DIGITS_LOWER</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">0xF0</span> <span class="token operator">&amp;</span> data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            out<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant">DIGITS_LOWER</span><span class="token punctuation">[</span><span class="token number">0x0F</span> <span class="token operator">&amp;</span> data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>out<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="步骤三-测试推流地址" tabindex="-1"><a class="header-anchor" href="#步骤三-测试推流地址" aria-hidden="true">#</a> 步骤三：测试推流地址</h4><p>复制上面代码输出的推流地址，到控制台 “常用工具” ==》 “Web推流”，测试推流地址，详细步骤如上，在流管理中能够看到状态是直播中则说明推流地址正确！</p><h3 id="_1-4-2-播放地址生成" tabindex="-1"><a class="header-anchor" href="#_1-4-2-播放地址生成" aria-hidden="true">#</a> 1.4.2 播放地址生成</h3><p>播放地址生成规则跟推流地址生成规则一致，只是拼接的域名不同，完整代码</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>tingshu<span class="token punctuation">.</span>live<span class="token punctuation">.</span>util</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">UnsupportedEncodingException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">MessageDigest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">NoSuchAlgorithmException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">LocalDateTime</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">ZoneOffset</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//域名管理中点击推流域名--&gt;推流配置--&gt;鉴权配置--&gt;主KEY</span>
        <span class="token class-name">String</span> key <span class="token operator">=</span> <span class="token string">&quot;89a97ccfdca7784b8b75fcd486f63520&quot;</span><span class="token punctuation">;</span>
        <span class="token comment">//流名称</span>
        <span class="token class-name">String</span> streamName <span class="token operator">=</span> <span class="token string">&quot;room1&quot;</span><span class="token punctuation">;</span>
        <span class="token comment">//过期时间</span>
        <span class="token class-name">LocalDateTime</span> localDateTime <span class="token operator">=</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> nowTime <span class="token operator">=</span> localDateTime<span class="token punctuation">.</span><span class="token function">toEpochSecond</span><span class="token punctuation">(</span><span class="token class-name">ZoneOffset</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;+8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
        <span class="token keyword">long</span> txTime <span class="token operator">=</span> nowTime <span class="token operator">+</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">12</span><span class="token punctuation">;</span> <span class="token comment">// 默认12小时</span>

        <span class="token class-name">String</span> safeUrl <span class="token operator">=</span> <span class="token function">getSafeUrl</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> streamName<span class="token punctuation">,</span> txTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>safeUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">//推流地址</span>
        <span class="token class-name">String</span> pushUrl <span class="token operator">=</span> <span class="token string">&quot;webrtc://166120.livepush.myqcloud.com/live/&quot;</span> <span class="token operator">+</span> streamName <span class="token operator">+</span> <span class="token string">&quot;?&quot;</span> <span class="token operator">+</span> safeUrl<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>pushUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//播放地址</span>
        <span class="token class-name">String</span> playUrl <span class="token operator">=</span> <span class="token string">&quot;webrtc://txplay.atguigu.cn/live/&quot;</span> <span class="token operator">+</span> streamName <span class="token operator">+</span> <span class="token string">&quot;?&quot;</span> <span class="token operator">+</span> safeUrl<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>playUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token constant">DIGITS_LOWER</span> <span class="token operator">=</span>
            <span class="token punctuation">{</span><span class="token char">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;e&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;f&#39;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token comment">/*
     * KEY+ streamName + txTime
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">getSafeUrl</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">,</span> <span class="token class-name">String</span> streamName<span class="token punctuation">,</span> <span class="token keyword">long</span> txTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> input <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
                <span class="token function">append</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">.</span>
                <span class="token function">append</span><span class="token punctuation">(</span>streamName<span class="token punctuation">)</span><span class="token punctuation">.</span>
                <span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span>txTime<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">String</span> txSecret <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">MessageDigest</span> messageDigest <span class="token operator">=</span> <span class="token class-name">MessageDigest</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">&quot;MD5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            txSecret  <span class="token operator">=</span> <span class="token function">byteArrayToHexString</span><span class="token punctuation">(</span>
                    messageDigest<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span>input<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NoSuchAlgorithmException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">UnsupportedEncodingException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> txSecret <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token string">&quot;&quot;</span> <span class="token operator">:</span>
                <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
                        <span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;txSecret=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
                        <span class="token function">append</span><span class="token punctuation">(</span>txSecret<span class="token punctuation">)</span><span class="token punctuation">.</span>
                        <span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;&amp;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
                        <span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;txTime=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
                        <span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span>txTime<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
                        <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">byteArrayToHexString</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> out <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span>data<span class="token punctuation">.</span>length <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> data<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            out<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant">DIGITS_LOWER</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">0xF0</span> <span class="token operator">&amp;</span> data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            out<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant">DIGITS_LOWER</span><span class="token punctuation">[</span><span class="token number">0x0F</span> <span class="token operator">&amp;</span> data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>out<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-4-3-封装直播地址" tabindex="-1"><a class="header-anchor" href="#_1-4-3-封装直播地址" aria-hidden="true">#</a> 1.4.3 封装直播地址</h3><p>后续做直播，其实只是使用了这两个地址，封装为工具类，后续使用</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>tingshu<span class="token punctuation">.</span>live<span class="token punctuation">.</span>util</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>tingshu<span class="token punctuation">.</span>vo<span class="token punctuation">.</span>live<span class="token punctuation">.</span></span><span class="token class-name">TencentLiveAddressVo</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">PostConstruct</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span>env<span class="token punctuation">.</span></span><span class="token class-name">Environment</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">UnsupportedEncodingException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">MessageDigest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>security<span class="token punctuation">.</span></span><span class="token class-name">NoSuchAlgorithmException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">LocalDateTime</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">ZoneOffset</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 推拉流生成工具
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LiveAutoAddressUtil</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token constant">DIGITS_LOWER</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token char">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;6&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;7&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;8&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;9&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;d&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;e&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;f&#39;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> pushKey <span class="token operator">=</span> <span class="token string">&quot;89a97ccfdca7784b8b75fcd486f63520&quot;</span><span class="token punctuation">;</span> <span class="token comment">//域名管理中点击推流域名--&gt;推流配置--&gt;鉴权配置--&gt;主KEY</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> pushDomain <span class="token operator">=</span> <span class="token string">&quot;166120.livepush.myqcloud.com&quot;</span><span class="token punctuation">;</span> <span class="token comment">//云直播控制台配置的推流域名</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> pullDomain <span class="token operator">=</span> <span class="token string">&quot;txplay.atguigu.cn&quot;</span><span class="token punctuation">;</span><span class="token comment">//云直播控制台配置的拉流域名</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token class-name">AppName</span> <span class="token operator">=</span> <span class="token string">&quot;live&quot;</span><span class="token punctuation">;</span> <span class="token comment">//直播SDK--&gt;应用管理--&gt;自己创建应用中的应用名称</span>
    

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">TencentLiveAddressVo</span> <span class="token function">getAddressUrl</span><span class="token punctuation">(</span><span class="token class-name">String</span> streamName<span class="token punctuation">,</span> <span class="token keyword">long</span> txTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> safeUrl <span class="token operator">=</span> <span class="token function">getSafeUrl</span><span class="token punctuation">(</span>pushKey<span class="token punctuation">,</span> streamName<span class="token punctuation">,</span> txTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">TencentLiveAddressVo</span> liveAddress <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TencentLiveAddressVo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        liveAddress<span class="token punctuation">.</span><span class="token function">setPushWebRtcUrl</span><span class="token punctuation">(</span><span class="token string">&quot;webrtc://&quot;</span> <span class="token operator">+</span> pushDomain <span class="token operator">+</span> <span class="token string">&quot;/&quot;</span> <span class="token operator">+</span> <span class="token class-name">AppName</span> <span class="token operator">+</span> <span class="token string">&quot;/&quot;</span> <span class="token operator">+</span> streamName <span class="token operator">+</span> <span class="token string">&quot;?&quot;</span> <span class="token operator">+</span> safeUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
        liveAddress<span class="token punctuation">.</span><span class="token function">setPullWebRtcUrl</span><span class="token punctuation">(</span><span class="token string">&quot;webrtc://&quot;</span> <span class="token operator">+</span> pullDomain <span class="token operator">+</span> <span class="token string">&quot;/&quot;</span> <span class="token operator">+</span> <span class="token class-name">AppName</span> <span class="token operator">+</span> <span class="token string">&quot;/&quot;</span> <span class="token operator">+</span> streamName <span class="token operator">+</span> <span class="token string">&quot;?&quot;</span> <span class="token operator">+</span> safeUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> liveAddress<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token comment">/* * KEY+ streamName + txTime */</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">getSafeUrl</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">,</span> <span class="token class-name">String</span> streamName<span class="token punctuation">,</span> <span class="token keyword">long</span> txTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> input <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>streamName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span>txTime<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> txSecret <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">MessageDigest</span> messageDigest <span class="token operator">=</span> <span class="token class-name">MessageDigest</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">&quot;MD5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            txSecret <span class="token operator">=</span> <span class="token function">byteArrayToHexString</span><span class="token punctuation">(</span>messageDigest<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span>input<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NoSuchAlgorithmException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">UnsupportedEncodingException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> txSecret <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token string">&quot;&quot;</span> <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;txSecret=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>txSecret<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;&amp;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;txTime=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span>txTime<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">byteArrayToHexString</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> out <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span>data<span class="token punctuation">.</span>length <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> data<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            out<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant">DIGITS_LOWER</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">0xF0</span> <span class="token operator">&amp;</span> data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            out<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant">DIGITS_LOWER</span><span class="token punctuation">[</span><span class="token number">0x0F</span> <span class="token operator">&amp;</span> data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>out<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> streamName <span class="token operator">=</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">LocalDateTime</span> localDateTime <span class="token operator">=</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> nowTime <span class="token operator">=</span> localDateTime<span class="token punctuation">.</span><span class="token function">toEpochSecond</span><span class="token punctuation">(</span><span class="token class-name">ZoneOffset</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;+8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> endTime <span class="token operator">=</span> nowTime <span class="token operator">+</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">12</span><span class="token punctuation">;</span> <span class="token comment">// 默认12小时</span>
        <span class="token class-name">TencentLiveAddressVo</span> addressUrl <span class="token operator">=</span> <span class="token class-name">LiveAutoAddressUtil</span><span class="token punctuation">.</span><span class="token function">getAddressUrl</span><span class="token punctuation">(</span>streamName<span class="token punctuation">,</span> endTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>addressUrl<span class="token punctuation">.</span><span class="token function">getPushWebRtcUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>addressUrl<span class="token punctuation">.</span><span class="token function">getPullWebRtcUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_2-直播对接" tabindex="-1"><a class="header-anchor" href="#_2-直播对接" aria-hidden="true">#</a> 2 直播对接</h1><h2 id="_2-1-需求说明" tabindex="-1"><a class="header-anchor" href="#_2-1-需求说明" aria-hidden="true">#</a> 2.1 需求说明</h2><p>主播开启直播，如果当前时间段有未结束直播，直接进入直播间</p><p>用户观看端，直接点击“直播”频道，可以看见正在直播的用户列表，选择其中一个可进入直播间。</p><h2 id="_2-2-创建直播" tabindex="-1"><a class="header-anchor" href="#_2-2-创建直播" aria-hidden="true">#</a> 2.2 创建直播</h2><h3 id="_2-2-1-创建直播流程" tabindex="-1"><a class="header-anchor" href="#_2-2-1-创建直播流程" aria-hidden="true">#</a> 2.2.1 创建直播流程</h3><p>由于直播部分为H5开发，因此我们不能在微信小程序工具上打开测试，微信小程序不支持</p><h4 id="步骤一-运行h5" tabindex="-1"><a class="header-anchor" href="#步骤一-运行h5" aria-hidden="true">#</a> 步骤一：运行H5</h4><p>打开HBuilder工具，选中项目，点击：运行 ==》 运行到浏览器 ==》 Chrome</p><p><img src="`+S+`" alt="69033847708"></p><h4 id="步骤二-开启调试模式" tabindex="-1"><a class="header-anchor" href="#步骤二-开启调试模式" aria-hidden="true">#</a> 步骤二：开启调试模式</h4><p>启动项目，浏览器使用调试模式 ，访问项目数据的时候，需要跨域设置，所以在网关中添加配置即可</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>server<span class="token operator">:</span>
  port<span class="token operator">:</span> <span class="token number">80</span>
spring<span class="token operator">:</span>
  cloud<span class="token operator">:</span>
    openfeign<span class="token operator">:</span>
      lazy<span class="token operator">-</span>attributes<span class="token operator">-</span>resolution<span class="token operator">:</span> <span class="token boolean">true</span>
      client<span class="token operator">:</span>
        config<span class="token operator">:</span>
          <span class="token keyword">default</span><span class="token operator">:</span>
            connectTimeout<span class="token operator">:</span> <span class="token number">30000</span>
            readTimeout<span class="token operator">:</span> <span class="token number">30000</span>
            loggerLevel<span class="token operator">:</span> basic
    gateway<span class="token operator">:</span>
      discovery<span class="token operator">:</span>      #是否与服务发现组件进行结合，通过 <span class="token function">serviceId</span><span class="token punctuation">(</span>必须设置成大写<span class="token punctuation">)</span> 转发到具体的服务实例。默认为<span class="token boolean">false</span>，设为<span class="token boolean">true</span>便开启通过服务中心的自动根据 serviceId 创建路由的功能。
        locator<span class="token operator">:</span>      #路由访问方式：http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token class-name">Gateway_HOST</span><span class="token operator">:</span><span class="token class-name">Gateway_PORT</span><span class="token operator">/</span>大写的serviceId<span class="token doc-comment comment">/**，其中微服务应用名默认大写访问。
          enabled: true
      routes:
        - id: service-album
          uri: lb://service-album
          predicates:
            - Path=/*/</span>album<span class="token doc-comment comment">/**
        - id: service-user
          uri: lb://service-user
          predicates:
            - Path=/*/</span>user<span class="token doc-comment comment">/**
        - id: service-order
          uri: lb://service-order
          predicates:
            - Path=/*/</span>order<span class="token doc-comment comment">/**
        - id: service-live
          uri: lb://service-live
          predicates:
            - Path=/*/</span>live<span class="token doc-comment comment">/**
        - id: service-live-websocket
          uri: lb:ws://service-live #ws://localhost:8507
          predicates:
            - Path=/websocket/**
        - id: service-account
          uri: lb://service-account
          predicates:
            - Path=/*/</span>account<span class="token doc-comment comment">/**
        - id: service-comment
          uri: lb://service-comment
          predicates:
            - Path=/*/</span>comment<span class="token doc-comment comment">/**
        - id: service-dispatch
          uri: lb://service-dispatch
          predicates:
            - Path=/*/</span>dispatch<span class="token doc-comment comment">/**
        - id: service-payment
          uri: lb://service-payment
          predicates:
            - Path=/*/</span>payment<span class="token doc-comment comment">/**
        - id: service-system
          uri: lb://service-system
          predicates:
            - Path=/*/</span>system<span class="token doc-comment comment">/**
        - id: service-search
          uri: lb://service-search
          predicates:
            - Path=/*/</span>search<span class="token doc-comment comment">/**
        - id: service-search
          uri: lb://service-system
          predicates:
            - Path=/*/</span>system<span class="token doc-comment comment">/**
      globalcors:
        cors-configurations:
          &#39;[/**]&#39;:
            allowedMethods: &quot;*&quot;
            allowedHeaders: &quot;*&quot;
            allowedOriginPatterns: &quot;*&quot;
            allowCredentials: true
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+_+'" alt="69033858351"></p><h4 id="步骤三-访问频道-我的" tabindex="-1"><a class="header-anchor" href="#步骤三-访问频道-我的" aria-hidden="true">#</a> 步骤三：访问频道“我的”</h4><p>点击“我的”</p><p><img src="'+q+'" alt="69033861562"></p><p>由于H5没有登录入口，因此我们要把小程序的登录token设置到浏览器的本地存储</p><h4 id="步骤四-获取小程序token" tabindex="-1"><a class="header-anchor" href="#步骤四-获取小程序token" aria-hidden="true">#</a> 步骤四：获取小程序token</h4><p>直接从redis 获取！</p><p><img src="'+L+'" alt="69033881430"></p><h4 id="步骤五-设置h5的token" tabindex="-1"><a class="header-anchor" href="#步骤五-设置h5的token" aria-hidden="true">#</a> 步骤五：设置H5的token</h4><p><img src="'+x+'" alt="69033887056"></p><p>url 路径为 http://localhost:5173/ <strong>后面如果有参数则删除！</strong> 再刷新页面，H5自动登录成功</p><p><img src="'+I+'" alt="69033891769"></p><h4 id="步骤六-创建直播" tabindex="-1"><a class="header-anchor" href="#步骤六-创建直播" aria-hidden="true">#</a> 步骤六：创建直播</h4><p>点击“录音/直播”</p><p><img src="'+R+`" alt="69033902580"></p><p>进入创建直播页面，会请求2个接口：</p><p>1，获取全部直播标签</p><p>2，获取当前正在直播的数据，如果有，直接进入直播间，如果没有创建直播</p><h3 id="_2-2-2-获取全部直播标签" tabindex="-1"><a class="header-anchor" href="#_2-2-2-获取全部直播标签" aria-hidden="true">#</a> 2.2.2 获取全部直播标签</h3><h4 id="livetagapicontroller" tabindex="-1"><a class="header-anchor" href="#livetagapicontroller" aria-hidden="true">#</a> LiveTagApiController</h4><p>定义controller接口</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Operation</span><span class="token punctuation">(</span>summary <span class="token operator">=</span> <span class="token string">&quot;获取全部直播标签&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;findAllLiveTag&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">LiveTag</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">findAllLiveTag</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span>liveTagService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-3-获取用户当前正在直播的信息" tabindex="-1"><a class="header-anchor" href="#_2-2-3-获取用户当前正在直播的信息" aria-hidden="true">#</a> 2.2.3 获取用户当前正在直播的信息</h3><h4 id="liveroomapicontroller" tabindex="-1"><a class="header-anchor" href="#liveroomapicontroller" aria-hidden="true">#</a> LiveRoomApiController</h4><p>定义controller接口</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@GuiGuLogin</span>
<span class="token annotation punctuation">@Operation</span><span class="token punctuation">(</span>summary <span class="token operator">=</span> <span class="token string">&quot;获取当前用户直播&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;getCurrentLive&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LiveRoom</span><span class="token punctuation">&gt;</span></span> <span class="token function">getCurrentLive</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span>liveRoomService<span class="token punctuation">.</span><span class="token function">getCurrentLive</span><span class="token punctuation">(</span><span class="token class-name">AuthContextHolder</span><span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="liveroomservice" tabindex="-1"><a class="header-anchor" href="#liveroomservice" aria-hidden="true">#</a> LiveRoomService</h4><p>定义service接口</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">LiveRoom</span> <span class="token function">getCurrentLive</span><span class="token punctuation">(</span><span class="token class-name">Long</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="liveroomserviceimpl" tabindex="-1"><a class="header-anchor" href="#liveroomserviceimpl" aria-hidden="true">#</a> LiveRoomServiceImpl</h4><p>service接口实现</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">LiveRoom</span> <span class="token function">getCurrentLive</span><span class="token punctuation">(</span><span class="token class-name">Long</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> liveRoomMapper<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LiveRoom</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">LiveRoom</span><span class="token operator">::</span><span class="token function">getUserId</span><span class="token punctuation">,</span> userId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ge</span><span class="token punctuation">(</span><span class="token class-name">LiveRoom</span><span class="token operator">::</span><span class="token function">getExpireTime</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-4-创建直播" tabindex="-1"><a class="header-anchor" href="#_2-2-4-创建直播" aria-hidden="true">#</a> 2.2.4 创建直播</h3><h4 id="liveroomapicontroller-1" tabindex="-1"><a class="header-anchor" href="#liveroomapicontroller-1" aria-hidden="true">#</a> LiveRoomApiController</h4><p>将保存数据封装到一个实体类：LiveRoomVo</p><p>定义controller接口</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@GuiGuLogin</span>
<span class="token annotation punctuation">@Operation</span><span class="token punctuation">(</span>summary <span class="token operator">=</span> <span class="token string">&quot;创建直播&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;saveLiveRoom&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LiveRoom</span><span class="token punctuation">&gt;</span></span> <span class="token function">saveLiveRoom</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token annotation punctuation">@Validated</span> <span class="token class-name">LiveRoomVo</span> liveRoomVo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span>liveRoomService<span class="token punctuation">.</span><span class="token function">saveLiveRoom</span><span class="token punctuation">(</span>liveRoomVo<span class="token punctuation">,</span> <span class="token class-name">AuthContextHolder</span><span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="liveroomservice-1" tabindex="-1"><a class="header-anchor" href="#liveroomservice-1" aria-hidden="true">#</a> LiveRoomService</h4><p>定义service接口</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>LiveRoom saveLiveRoom(LiveRoomVo liveRoomVo, Long userId);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="liveroomserviceimpl-1" tabindex="-1"><a class="header-anchor" href="#liveroomserviceimpl-1" aria-hidden="true">#</a> LiveRoomServiceImpl</h4><p>service接口实现</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Transactional</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">LiveRoom</span> <span class="token function">saveLiveRoom</span><span class="token punctuation">(</span><span class="token class-name">LiveRoomVo</span> liveRoomVo<span class="token punctuation">,</span> <span class="token class-name">Long</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">long</span> count <span class="token operator">=</span> liveRoomMapper<span class="token punctuation">.</span><span class="token function">selectCount</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LiveRoom</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">LiveRoom</span><span class="token operator">::</span><span class="token function">getUserId</span><span class="token punctuation">,</span> userId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">gt</span><span class="token punctuation">(</span><span class="token class-name">LiveRoom</span><span class="token operator">::</span><span class="token function">getExpireTime</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">if</span><span class="token punctuation">(</span>count <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">GuiguException</span><span class="token punctuation">(</span><span class="token class-name">ResultCodeEnum</span><span class="token punctuation">.</span><span class="token constant">EXIST_NO_EXPIRE_LIVE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token class-name">LiveRoom</span> liveRoom <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LiveRoom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token class-name">BeanUtils</span><span class="token punctuation">.</span><span class="token function">copyProperties</span><span class="token punctuation">(</span>liveRoomVo<span class="token punctuation">,</span> liveRoom<span class="token punctuation">)</span><span class="token punctuation">;</span>
   liveRoom<span class="token punctuation">.</span><span class="token function">setUserId</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
   liveRoom<span class="token punctuation">.</span><span class="token function">setAppName</span><span class="token punctuation">(</span><span class="token string">&quot;live&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   liveRoom<span class="token punctuation">.</span><span class="token function">setStreamName</span><span class="token punctuation">(</span><span class="token string">&quot;guigu&quot;</span><span class="token operator">+</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
   liveRoomMapper<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>liveRoom<span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token keyword">long</span> txTime <span class="token operator">=</span> liveRoom<span class="token punctuation">.</span><span class="token function">getExpireTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">;</span>
   <span class="token class-name">TencentLiveAddressVo</span> addressUrl <span class="token operator">=</span> <span class="token class-name">LiveAutoAddressUtil</span><span class="token punctuation">.</span><span class="token function">getAddressUrl</span><span class="token punctuation">(</span>liveRoom<span class="token punctuation">.</span><span class="token function">getStreamName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> txTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
   liveRoom<span class="token punctuation">.</span><span class="token function">setPushUrl</span><span class="token punctuation">(</span>addressUrl<span class="token punctuation">.</span><span class="token function">getPushWebRtcUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   liveRoom<span class="token punctuation">.</span><span class="token function">setPlayUrl</span><span class="token punctuation">(</span>addressUrl<span class="token punctuation">.</span><span class="token function">getPullWebRtcUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   liveRoomMapper<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>liveRoom<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">return</span> liveRoom<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-4-直播列表" tabindex="-1"><a class="header-anchor" href="#_2-2-4-直播列表" aria-hidden="true">#</a> 2.2.4 直播列表</h3><p>直播频道对应的直播列表</p><p>当前数据较少，大家可以自己造一些数据，页面更美观</p><p><img src="`+U+`" alt="69034023750"></p><h4 id="liveroomapicontroller-2" tabindex="-1"><a class="header-anchor" href="#liveroomapicontroller-2" aria-hidden="true">#</a> LiveRoomApiController</h4><p>定义controller接口</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@GuiGuLogin</span>
<span class="token annotation punctuation">@Operation</span><span class="token punctuation">(</span>summary <span class="token operator">=</span> <span class="token string">&quot;获取当前直播列表&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;findLiveList&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">LiveRoom</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">findLiveList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span>liveRoomService<span class="token punctuation">.</span><span class="token function">findLiveList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="liveroomservice-2" tabindex="-1"><a class="header-anchor" href="#liveroomservice-2" aria-hidden="true">#</a> LiveRoomService</h4><p>定义service接口</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LiveRoom</span><span class="token punctuation">&gt;</span></span> <span class="token function">findLiveList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="liveroomserviceimpl-2" tabindex="-1"><a class="header-anchor" href="#liveroomserviceimpl-2" aria-hidden="true">#</a> LiveRoomServiceImpl</h4><p>service接口实现</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LiveRoom</span><span class="token punctuation">&gt;</span></span> <span class="token function">findLiveList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LiveRoom</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   queryWrapper<span class="token punctuation">.</span><span class="token function">gt</span><span class="token punctuation">(</span><span class="token class-name">LiveRoom</span><span class="token operator">::</span><span class="token function">getExpireTime</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">return</span> liveRoomMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-4-直播详情" tabindex="-1"><a class="header-anchor" href="#_2-4-直播详情" aria-hidden="true">#</a> 2.4 直播详情</h2><p>前面开启了直播，当前通过列表，进入任意一个详情页，就可以看见直播视频了，直播详情主要获取播放地址及相关信息。</p><p><img src="`+T+`" alt="69034034302"></p><h4 id="liveroomapicontroller-3" tabindex="-1"><a class="header-anchor" href="#liveroomapicontroller-3" aria-hidden="true">#</a> LiveRoomApiController</h4><p>定义controller接口</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@GuiGuLogin</span>
<span class="token annotation punctuation">@Operation</span><span class="token punctuation">(</span>summary <span class="token operator">=</span> <span class="token string">&quot;根据id获取信息&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;getById/{id}&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LiveRoom</span><span class="token punctuation">&gt;</span></span> <span class="token function">getById</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">Long</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span>liveRoomService<span class="token punctuation">.</span><span class="token function">getById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_3-直播间即时通讯" tabindex="-1"><a class="header-anchor" href="#_3-直播间即时通讯" aria-hidden="true">#</a> 3 直播间即时通讯</h1><h2 id="_3-1-需求说明" tabindex="-1"><a class="header-anchor" href="#_3-1-需求说明" aria-hidden="true">#</a> 3.1 需求说明</h2><p>主播创建了直播，用户进入直播，大家可以进行实时互动，可以在直播间发送信息，直播间的消息，在直播间的用户都是共享的，相当于把直播间的用户组建了一个群组</p><p>实现思路：</p><p>1，使用websocket实现即时通讯</p><p>2，以直播id组建群组</p><h2 id="_3-2-集成websocket" tabindex="-1"><a class="header-anchor" href="#_3-2-集成websocket" aria-hidden="true">#</a> 3.2 集成websocket</h2><p>springboot集成 websocket 很容易</p><h3 id="_3-2-1-引入依赖" tabindex="-1"><a class="header-anchor" href="#_3-2-1-引入依赖" aria-hidden="true">#</a> 3.2.1 引入依赖</h3><p>已引入就忽略</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!--websocket依赖--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-websocket<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-2-开启websocket" tabindex="-1"><a class="header-anchor" href="#_3-2-2-开启websocket" aria-hidden="true">#</a> 3.2.2 开启websocket</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>tingshu<span class="token punctuation">.</span>config</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>socket<span class="token punctuation">.</span>server<span class="token punctuation">.</span>standard<span class="token punctuation">.</span></span><span class="token class-name">ServerEndpointExporter</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * WebSocket配置类：
 *  开启websocket配置，通过这个配置 spring boot 才能去扫描到 websocket 的注解
 *
 * WebSocket常用注解：
 * @ServerEndpoint
 * 通过这个 spring boot 就可以知道你暴露出去的 ws 应用的路径，有点类似我们经常用的@RequestMapping。比如你的启动端口是8080，而这个注解的值是api，那我们就可以通过 ws://127.0.0.1:8080/api 来连接你的应用
 * @OnOpen
 * 当 websocket 建立连接成功后会触发这个注解修饰的方法，注意它有一个 Session 参数
 * @OnClose
 * 当 websocket 建立的连接断开后会触发这个注解修饰的方法，注意它有一个 Session 参数
 * @OnMessage
 * 当客户端发送消息到服务端时，会触发这个注解修改的方法，它有一个 String 入参表明客户端传入的值
 * @OnError
 * 当 websocket 建立连接时出现异常会触发这个注解修饰的方法，注意它有一个 Session 参数
 */</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebSocketConfig</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">ServerEndpointExporter</span> <span class="token function">serverEndpointExporter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ServerEndpointExporter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-3-编写websocket服务器端" tabindex="-1"><a class="header-anchor" href="#_3-2-3-编写websocket服务器端" aria-hidden="true">#</a> 3.2.3 编写websocket服务器端</h3><p>连接websocket我们需要知道用户身份及他进入的哪个直播间，因此客户端连接的时候需要传入两个参数：直播间id与用户token，初始代码如下：</p><p>注意：使用@ServerEndpoint标签标记接口</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>tingshu<span class="token punctuation">.</span>live<span class="token punctuation">.</span>api</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>v3<span class="token punctuation">.</span>oas<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>tags<span class="token punctuation">.</span></span><span class="token class-name">Tag</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>websocket<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>websocket<span class="token punctuation">.</span>server<span class="token punctuation">.</span></span><span class="token class-name">PathParam</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>websocket<span class="token punctuation">.</span>server<span class="token punctuation">.</span></span><span class="token class-name">ServerEndpoint</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Tag</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;直播间即时通讯接口管理&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@ServerEndpoint</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/api/websocket/{liveRoomId}/{token}&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebSocketApiController</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 连接建立成功调用的方法
     */</span>
    <span class="token annotation punctuation">@OnOpen</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onOpen</span><span class="token punctuation">(</span><span class="token class-name">Session</span> session<span class="token punctuation">,</span> <span class="token annotation punctuation">@PathParam</span><span class="token punctuation">(</span><span class="token string">&quot;liveRoomId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> liveRoomId<span class="token punctuation">,</span> <span class="token annotation punctuation">@PathParam</span><span class="token punctuation">(</span><span class="token string">&quot;token&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> token<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;建立连接，liveRoomId：{}， token：{}&quot;</span><span class="token punctuation">,</span> liveRoomId<span class="token punctuation">,</span> token<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 连接关闭调用的方法
     */</span>
    <span class="token annotation punctuation">@OnClose</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClose</span><span class="token punctuation">(</span><span class="token class-name">Session</span> session<span class="token punctuation">,</span> <span class="token annotation punctuation">@PathParam</span><span class="token punctuation">(</span><span class="token string">&quot;liveRoomId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> liveRoomId<span class="token punctuation">,</span> <span class="token annotation punctuation">@PathParam</span><span class="token punctuation">(</span><span class="token string">&quot;token&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> token<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;断开连接，liveRoomId：{}， token：{}&quot;</span><span class="token punctuation">,</span> liveRoomId<span class="token punctuation">,</span> token<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 收到客户端消息后调用的方法
     *
     * <span class="token keyword">@param</span> <span class="token parameter">message</span> 客户端发送过来的消息
     */</span>
    <span class="token annotation punctuation">@OnMessage</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onMessage</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">,</span> <span class="token class-name">Session</span> session<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;来自客户端的消息：{}&quot;</span><span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 发生错误时调用+
     */</span>
    <span class="token annotation punctuation">@OnError</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Session</span> session<span class="token punctuation">,</span> <span class="token class-name">Throwable</span> error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;发生错误&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        error<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>暴露接口：ws://localhost/api/websocket/{liveRoomId}/{token}，端口可以是本微服务端口，也可以试网关端口，一般使用网关端口</p><h3 id="_3-2-4-配置网关" tabindex="-1"><a class="header-anchor" href="#_3-2-4-配置网关" aria-hidden="true">#</a> 3.2.4 配置网关</h3><p>如果使用网关端口，需配置如下：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> service<span class="token punctuation">-</span>live<span class="token punctuation">-</span>websocket
  <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>ws<span class="token punctuation">:</span>//service<span class="token punctuation">-</span>live <span class="token comment">#ws://localhost:8507</span>
  <span class="token key atrule">predicates</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> Path=/api/websocket/<span class="token important">**</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-5-测试websocket" tabindex="-1"><a class="header-anchor" href="#_3-2-5-测试websocket" aria-hidden="true">#</a> 3.2.5 测试websocket</h3><p>测试工具：http://www.jsons.cn/websocket/</p><p>websocket地址：直播间地址</p><p>1、ws://localhost/api/websocket/{liveRoomId}/{token}</p><p>可分别连接试试</p><p>输入地址：ws://localhost/api/websocket/1/user1，点击“Websocket连接”，连接成功</p><p><img src="`+M+'" alt="69035311212"></p><p>查看idea控制台，如图</p><p><img src="'+j+'" alt="69035326056"></p><p>发送消息与断开连接，如图</p><p><img src="'+C+`" alt="69035335249"></p><p>都收到了对应消息，说明websocket调试通过，下面我们就可以编写直播间通讯逻辑了</p><h2 id="_3-3-直播间即时通讯" tabindex="-1"><a class="header-anchor" href="#_3-3-直播间即时通讯" aria-hidden="true">#</a> 3.3 直播间即时通讯</h2><h3 id="_3-3-1-封装直播间容器工具类" tabindex="-1"><a class="header-anchor" href="#_3-3-1-封装直播间容器工具类" aria-hidden="true">#</a> 3.3.1 封装直播间容器工具类</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>tingshu<span class="token punctuation">.</span>live<span class="token punctuation">.</span>util</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>tingshu<span class="token punctuation">.</span>model<span class="token punctuation">.</span>live<span class="token punctuation">.</span></span><span class="token class-name">FromUser</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>websocket<span class="token punctuation">.</span></span><span class="token class-name">Session</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">CollectionUtils</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ConcurrentHashMap</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebSocketLocalContainerUtil</span> <span class="token punctuation">{</span>

    <span class="token comment">//建立用户id与用户基本信息对应关系容器，通过用户id能够获取用户基本信息</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">FromUser</span><span class="token punctuation">&gt;</span></span> userMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
    <span class="token comment">//建立用户id与websocket Session的对应关系容器，通过用户id能够获取Session会话信息</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">Session</span><span class="token punctuation">&gt;</span></span> sessionMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
    <span class="token comment">//建立直播间id与用户id列表的对应关系容器，通过直播间能够获取全部直播间用户列表</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> liveRoomIdToUserListMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">addFromUser</span><span class="token punctuation">(</span><span class="token class-name">Long</span> userId<span class="token punctuation">,</span> <span class="token class-name">FromUser</span> fromUser<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">WebSocketLocalContainerUtil</span><span class="token punctuation">.</span>userMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>userId<span class="token punctuation">,</span> fromUser<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">removeFromUser</span><span class="token punctuation">(</span><span class="token class-name">Long</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">WebSocketLocalContainerUtil</span><span class="token punctuation">.</span>userMap<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">FromUser</span> <span class="token function">getFromUser</span><span class="token punctuation">(</span><span class="token class-name">Long</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">WebSocketLocalContainerUtil</span><span class="token punctuation">.</span>userMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">addSession</span><span class="token punctuation">(</span><span class="token class-name">Long</span> userId<span class="token punctuation">,</span> <span class="token class-name">Session</span> session<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">WebSocketLocalContainerUtil</span><span class="token punctuation">.</span>sessionMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>userId<span class="token punctuation">,</span> session<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">removeSession</span><span class="token punctuation">(</span><span class="token class-name">Long</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">WebSocketLocalContainerUtil</span><span class="token punctuation">.</span>sessionMap<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Session</span> <span class="token function">getSession</span><span class="token punctuation">(</span><span class="token class-name">Long</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">WebSocketLocalContainerUtil</span><span class="token punctuation">.</span>sessionMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
	

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">removeUserIdToLiveRoom</span><span class="token punctuation">(</span><span class="token class-name">Long</span> liveRoomId<span class="token punctuation">,</span> <span class="token class-name">Long</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">WebSocketLocalContainerUtil</span><span class="token punctuation">.</span>liveRoomIdToUserListMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>liveRoomId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> <span class="token function">getLiveRoomUserIdList</span><span class="token punctuation">(</span><span class="token class-name">Long</span> liveRoomId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">WebSocketLocalContainerUtil</span><span class="token punctuation">.</span>liveRoomIdToUserListMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>liveRoomId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Integer</span> <span class="token function">getLiveRoomUserNum</span><span class="token punctuation">(</span><span class="token class-name">Long</span> liveRoomId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">WebSocketLocalContainerUtil</span><span class="token punctuation">.</span>liveRoomIdToUserListMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>liveRoomId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">addUserIdToLiveRoom</span><span class="token punctuation">(</span><span class="token class-name">Long</span> liveRoomId<span class="token punctuation">,</span> <span class="token class-name">Long</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> userIdList <span class="token operator">=</span> <span class="token class-name">WebSocketLocalContainerUtil</span><span class="token punctuation">.</span>liveRoomIdToUserListMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>liveRoomId<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">CollectionUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>userIdList<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          userIdList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          userIdList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token class-name">WebSocketLocalContainerUtil</span><span class="token punctuation">.</span>liveRoomIdToUserListMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>liveRoomId<span class="token punctuation">,</span> userIdList<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          userIdList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-2-封装直播间关联数据到容器" tabindex="-1"><a class="header-anchor" href="#_3-3-2-封装直播间关联数据到容器" aria-hidden="true">#</a> 3.3.2 封装直播间关联数据到容器</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Tag</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;直播间即时通讯接口管理&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@ServerEndpoint</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/api/websocket/{liveRoomId}/{token}&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebSocketApiController</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">RedisTemplate</span> redisTemplate<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setRedisTemplate</span><span class="token punctuation">(</span><span class="token class-name">RedisTemplate</span> redisTemplate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">WebSocketApiController</span><span class="token punctuation">.</span>redisTemplate <span class="token operator">=</span> redisTemplate<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 连接建立成功调用的方法
     */</span>
    <span class="token annotation punctuation">@OnOpen</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onOpen</span><span class="token punctuation">(</span><span class="token class-name">Session</span> session<span class="token punctuation">,</span> <span class="token annotation punctuation">@PathParam</span><span class="token punctuation">(</span><span class="token string">&quot;liveRoomId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> liveRoomId<span class="token punctuation">,</span> <span class="token annotation punctuation">@PathParam</span><span class="token punctuation">(</span><span class="token string">&quot;token&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> token<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;建立连接，liveRoomId：{}， token：{}&quot;</span><span class="token punctuation">,</span> liveRoomId<span class="token punctuation">,</span> token<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">//从redis获取用户基本信息，登录时保存到了redis</span>
        <span class="token class-name">UserInfo</span> userInfo <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">UserInfo</span><span class="token punctuation">)</span>redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">RedisConstant</span><span class="token punctuation">.</span><span class="token constant">USER_LOGIN_KEY_PREFIX</span><span class="token operator">+</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Long</span> userId <span class="token operator">=</span> userInfo<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//构建即时通讯用户基本信息</span>
        <span class="token class-name">FromUser</span> fromUser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FromUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        fromUser<span class="token punctuation">.</span><span class="token function">setUserId</span><span class="token punctuation">(</span>userInfo<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        fromUser<span class="token punctuation">.</span><span class="token function">setNickname</span><span class="token punctuation">(</span>userInfo<span class="token punctuation">.</span><span class="token function">getNickname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        fromUser<span class="token punctuation">.</span><span class="token function">setAvatarUrl</span><span class="token punctuation">(</span>userInfo<span class="token punctuation">.</span><span class="token function">getAvatarUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//保存用户与直播间关联关系到容器</span>
        <span class="token class-name">WebSocketLocalContainerUtil</span><span class="token punctuation">.</span><span class="token function">addSession</span><span class="token punctuation">(</span>userId<span class="token punctuation">,</span> session<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">WebSocketLocalContainerUtil</span><span class="token punctuation">.</span><span class="token function">addFromUser</span><span class="token punctuation">(</span>userId<span class="token punctuation">,</span> fromUser<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">WebSocketLocalContainerUtil</span><span class="token punctuation">.</span><span class="token function">addUserIdToLiveRoom</span><span class="token punctuation">(</span>liveRoomId<span class="token punctuation">,</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 连接关闭调用的方法
     */</span>
    <span class="token annotation punctuation">@OnClose</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClose</span><span class="token punctuation">(</span><span class="token class-name">Session</span> session<span class="token punctuation">,</span> <span class="token annotation punctuation">@PathParam</span><span class="token punctuation">(</span><span class="token string">&quot;liveRoomId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> liveRoomId<span class="token punctuation">,</span> <span class="token annotation punctuation">@PathParam</span><span class="token punctuation">(</span><span class="token string">&quot;token&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> token<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;断开连接，liveRoomId：{}， token：{}&quot;</span><span class="token punctuation">,</span> liveRoomId<span class="token punctuation">,</span> token<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//获取用户信息</span>
        <span class="token class-name">UserInfo</span> userInfo <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">UserInfo</span><span class="token punctuation">)</span>redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">RedisConstant</span><span class="token punctuation">.</span><span class="token constant">USER_LOGIN_KEY_PREFIX</span><span class="token operator">+</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Long</span> userId <span class="token operator">=</span> userInfo<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//删除容器中的关联关系</span>
        <span class="token class-name">WebSocketLocalContainerUtil</span><span class="token punctuation">.</span><span class="token function">removeSession</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">WebSocketLocalContainerUtil</span><span class="token punctuation">.</span><span class="token function">removeFromUser</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">WebSocketLocalContainerUtil</span><span class="token punctuation">.</span><span class="token function">removeUserIdToLiveRoom</span><span class="token punctuation">(</span>liveRoomId<span class="token punctuation">,</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 收到客户端消息后调用的方法
     *
     * <span class="token keyword">@param</span> <span class="token parameter">message</span> 客户端发送过来的消息
     */</span>
    <span class="token annotation punctuation">@OnMessage</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onMessage</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">,</span> <span class="token class-name">Session</span> session<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;来自客户端的消息：{}&quot;</span><span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 发生错误时调用
     */</span>
    <span class="token annotation punctuation">@OnError</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span><span class="token class-name">Session</span> session<span class="token punctuation">,</span> <span class="token class-name">Throwable</span> error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;发生错误&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        error<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-3-封装消息实体" tabindex="-1"><a class="header-anchor" href="#_3-3-3-封装消息实体" aria-hidden="true">#</a> 3.3.3 封装消息实体</h3><p>服务器端与前端H5通讯的消息协议就封装到这个对象里面了，后续前端H5与后端服务器都是以SocketMsg对象json串进行交互。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>tingshu<span class="token punctuation">.</span>model<span class="token punctuation">.</span>live</span><span class="token punctuation">;</span>


<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Getter</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 这里我们就不能使用简单的文本消息进行消息的发送了，我们使用json进行消息的发送。
 */</span>
<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SocketMsg</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Getter</span>
    <span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">MsgTypeEnum</span> <span class="token punctuation">{</span>

        <span class="token function">HEART_BEAT</span><span class="token punctuation">(</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;心跳信息&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token function">PUBLIC_MSG</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;公共聊天消息&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token function">JOIN_CHAT</span><span class="token punctuation">(</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;加入直播间&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token function">CLOSE_SOCKET</span><span class="token punctuation">(</span><span class="token string">&quot;3&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;退出直播间&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token function">TOKEN_INVALID</span><span class="token punctuation">(</span><span class="token string">&quot;-1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;token无效&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">;</span>

        <span class="token keyword">private</span> <span class="token class-name">String</span> code<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token class-name">String</span> data<span class="token punctuation">;</span>
		
        <span class="token class-name">MsgTypeEnum</span><span class="token punctuation">(</span><span class="token class-name">String</span> code<span class="token punctuation">,</span> <span class="token class-name">String</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>code <span class="token operator">=</span> code<span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> data<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>

    <span class="token comment">//直播房间id</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> liveRoomId<span class="token punctuation">;</span>

    <span class="token comment">//消息类型</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> msgType<span class="token punctuation">;</span>
  
    <span class="token comment">//消息内容</span>
    <span class="token keyword">private</span> <span class="token class-name">Object</span> msgContent<span class="token punctuation">;</span>

    <span class="token comment">//发送者</span>
    <span class="token keyword">private</span> <span class="token class-name">FromUser</span> fromUser<span class="token punctuation">;</span>
  	
    <span class="token comment">//时间戳</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> time<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-4-封装构建消息实体方法" tabindex="-1"><a class="header-anchor" href="#_3-3-4-封装构建消息实体方法" aria-hidden="true">#</a> 3.3.4 封装构建消息实体方法</h3><p>在WebSocketLocalContainerUtil类添加构建消息实体方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 构建消息实体
 * <span class="token keyword">@param</span> <span class="token parameter">liveRoomId</span>
 * <span class="token keyword">@param</span> <span class="token parameter">fromUser</span>
 * <span class="token keyword">@param</span> <span class="token parameter">msgTypeEnum</span>
 * <span class="token keyword">@param</span> <span class="token parameter">msgContent</span>
 * <span class="token keyword">@return</span>
 */</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">SocketMsg</span> <span class="token function">buildSocketMsg</span><span class="token punctuation">(</span><span class="token class-name">Long</span> liveRoomId<span class="token punctuation">,</span> <span class="token class-name">FromUser</span> fromUser<span class="token punctuation">,</span> <span class="token class-name">SocketMsg<span class="token punctuation">.</span>MsgTypeEnum</span> msgTypeEnum<span class="token punctuation">,</span> <span class="token class-name">Object</span> msgContent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">SocketMsg</span> socketMsg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SocketMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    socketMsg<span class="token punctuation">.</span><span class="token function">setLiveRoomId</span><span class="token punctuation">(</span>liveRoomId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    socketMsg<span class="token punctuation">.</span><span class="token function">setMsgType</span><span class="token punctuation">(</span>msgTypeEnum<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    socketMsg<span class="token punctuation">.</span><span class="token function">setMsgContent</span><span class="token punctuation">(</span>msgContent<span class="token punctuation">)</span><span class="token punctuation">;</span>
    socketMsg<span class="token punctuation">.</span><span class="token function">setFromUser</span><span class="token punctuation">(</span>fromUser<span class="token punctuation">)</span><span class="token punctuation">;</span>
    socketMsg<span class="token punctuation">.</span><span class="token function">setTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&quot;HH:mm:ss&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> socketMsg<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-5-封装群发消息" tabindex="-1"><a class="header-anchor" href="#_3-3-5-封装群发消息" aria-hidden="true">#</a> 3.3.5 封装群发消息</h3><p>在WebSocketLocalContainerUtil类添加封装群发消息</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 群发消息
 * <span class="token keyword">@param</span> <span class="token parameter">socketMsg</span>
 */</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">sendMsg</span><span class="token punctuation">(</span><span class="token class-name">SocketMsg</span> socketMsg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> userIdSet <span class="token operator">=</span> <span class="token class-name">WebSocketLocalContainerUtil</span><span class="token punctuation">.</span><span class="token function">getLiveRoomUserIdList</span><span class="token punctuation">(</span>socketMsg<span class="token punctuation">.</span><span class="token function">getLiveRoomId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">CollectionUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>userIdSet<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Long</span> userId <span class="token operator">:</span> userIdSet<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Session</span> session <span class="token operator">=</span> <span class="token class-name">WebSocketLocalContainerUtil</span><span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> session<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                session<span class="token punctuation">.</span><span class="token function">getAsyncRemote</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sendText</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>socketMsg<span class="token punctuation">,</span> <span class="token class-name">SerializerFeature<span class="token punctuation">.</span>DisableCircularReferenceDetect</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//异步发送消息.</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-6-加入直播间消息通知" tabindex="-1"><a class="header-anchor" href="#_3-3-6-加入直播间消息通知" aria-hidden="true">#</a> 3.3.6 加入直播间消息通知</h3><h4 id="添加直播间消息" tabindex="-1"><a class="header-anchor" href="#添加直播间消息" aria-hidden="true">#</a> 添加直播间消息</h4><p>用户加入直播间，建立websocket连接，提示直播间全体用户（张三加入了直播间），关键代码</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@OnOpen</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onOpen</span><span class="token punctuation">(</span><span class="token class-name">Session</span> session<span class="token punctuation">,</span> <span class="token annotation punctuation">@PathParam</span><span class="token punctuation">(</span><span class="token string">&quot;liveRoomId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> liveRoomId<span class="token punctuation">,</span> <span class="token annotation punctuation">@PathParam</span><span class="token punctuation">(</span><span class="token string">&quot;token&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> token<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;建立连接，liveRoomId：{}， token：{}&quot;</span><span class="token punctuation">,</span> liveRoomId<span class="token punctuation">,</span> token<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

    <span class="token comment">//保存用户与直播间关联关系到容器</span>
    <span class="token class-name">WebSocketLocalContainerUtil</span><span class="token punctuation">.</span><span class="token function">addSession</span><span class="token punctuation">(</span>userId<span class="token punctuation">,</span> session<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">WebSocketLocalContainerUtil</span><span class="token punctuation">.</span><span class="token function">addFromUser</span><span class="token punctuation">(</span>userId<span class="token punctuation">,</span> fromUser<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">WebSocketLocalContainerUtil</span><span class="token punctuation">.</span><span class="token function">addUserIdToLiveRoom</span><span class="token punctuation">(</span>liveRoomId<span class="token punctuation">,</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//构建消息：加入直播间</span>
    <span class="token class-name">SocketMsg</span> socketMsg <span class="token operator">=</span> <span class="token class-name">WebSocketLocalContainerUtil</span><span class="token punctuation">.</span><span class="token function">buildSocketMsg</span><span class="token punctuation">(</span>liveRoomId<span class="token punctuation">,</span> fromUser<span class="token punctuation">,</span> <span class="token class-name">SocketMsg<span class="token punctuation">.</span>MsgTypeEnum</span><span class="token punctuation">.</span><span class="token constant">JOIN_CHAT</span><span class="token punctuation">,</span> fromUser<span class="token punctuation">.</span><span class="token function">getNickname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;加入直播间&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">WebSocketLocalContainerUtil</span><span class="token punctuation">.</span><span class="token function">sendMsg</span><span class="token punctuation">(</span>socketMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="手动获取用户token" tabindex="-1"><a class="header-anchor" href="#手动获取用户token" aria-hidden="true">#</a> 手动获取用户token</h4><p>为了方便测试，手动获取token，我们在WxLoginApiController添加方法</p><p>service-user模块，WxLoginApiController</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Operation</span><span class="token punctuation">(</span>summary <span class="token operator">=</span> <span class="token string">&quot;手动获取token&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/getToken/{userId}&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">Result</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">Long</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">UserInfo</span> userInfo <span class="token operator">=</span> userInfoService<span class="token punctuation">.</span><span class="token function">getById</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> token <span class="token operator">=</span> <span class="token constant">UUID</span><span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">&quot;-&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">RedisConstant</span><span class="token punctuation">.</span><span class="token constant">USER_LOGIN_KEY_PREFIX</span><span class="token operator">+</span>token<span class="token punctuation">,</span> userInfo<span class="token punctuation">,</span> <span class="token class-name">RedisConstant</span><span class="token punctuation">.</span><span class="token constant">USER_LOGIN_REFRESH_KEY_TIMEOUT</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;token&quot;</span><span class="token punctuation">,</span> token<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>token1：2286fb83463e443f819ae51ae4c39e5d</p><p>token2：5c45b78b195843f1a0e54fe6aaf1bb8d</p><h4 id="多用户测试" tabindex="-1"><a class="header-anchor" href="#多用户测试" aria-hidden="true">#</a> 多用户测试</h4><p>用户1：ws://localhost/api/websocket/1/2286fb83463e443f819ae51ae4c39e5d</p><p><img src="`+E+'" alt="69035643133"></p><p>用户2：ws://localhost/api/websocket/1/5c45b78b195843f1a0e54fe6aaf1bb8d</p><p><img src="'+A+'" alt="69035647610"></p><p>当前2个用户连接成功，再看用户1控制台</p><p><img src="'+O+`" alt="69035654725"></p><p>用户1收到到了用户2的登录通知消息，测试通过</p><h3 id="_3-3-7-直播间发送消息" tabindex="-1"><a class="header-anchor" href="#_3-3-7-直播间发送消息" aria-hidden="true">#</a> 3.3.7 直播间发送消息</h3><p>消息我们都要构建成SocketMsg对象的json格式</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@OnMessage</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onMessage</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">,</span> <span class="token class-name">Session</span> session<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;来自客户端的消息：{}&quot;</span><span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">SocketMsg</span> socketMsg <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> <span class="token class-name">SocketMsg</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">WebSocketLocalContainerUtil</span><span class="token punctuation">.</span><span class="token function">sendMsg</span><span class="token punctuation">(</span>socketMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试消息：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span><span class="token property">&quot;fromUser&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token property">&quot;avatarUrl&quot;</span><span class="token operator">:</span><span class="token string">&quot;https://thirdwx.qlogo.cn/mmopen/vi_32/hFKeRpRQU4wG…axvke5nueicggowdBricR4pspWbp6dwFtLSCWJKyZGJoQ/132&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;nickname&quot;</span><span class="token operator">:</span><span class="token string">&quot;晴天&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;userId&quot;</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token property">&quot;liveRoomId&quot;</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token property">&quot;msgContent&quot;</span><span class="token operator">:</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;msgType&quot;</span><span class="token operator">:</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;time&quot;</span><span class="token operator">:</span><span class="token string">&quot;15:26:53&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>效果如下：</p><p><img src="`+W+`" alt="69035696671"></p><h3 id="_3-3-8-退出直播间" tabindex="-1"><a class="header-anchor" href="#_3-3-8-退出直播间" aria-hidden="true">#</a> 3.3.8 退出直播间</h3><p>用户退出直播间，通知直播间用户，谁谁谁离开直播间。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@OnClose</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClose</span><span class="token punctuation">(</span><span class="token class-name">Session</span> session<span class="token punctuation">,</span> <span class="token annotation punctuation">@PathParam</span><span class="token punctuation">(</span><span class="token string">&quot;liveRoomId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> liveRoomId<span class="token punctuation">,</span> <span class="token annotation punctuation">@PathParam</span><span class="token punctuation">(</span><span class="token string">&quot;token&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> token<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;断开连接，liveRoomId：{}， token：{}&quot;</span><span class="token punctuation">,</span> liveRoomId<span class="token punctuation">,</span> token<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//获取用户信息</span>
    <span class="token class-name">UserInfo</span> userInfo <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">UserInfo</span><span class="token punctuation">)</span>redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">RedisConstant</span><span class="token punctuation">.</span><span class="token constant">USER_LOGIN_KEY_PREFIX</span><span class="token operator">+</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Long</span> userId <span class="token operator">=</span> userInfo<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//构建消息：退出直播间</span>
    <span class="token class-name">FromUser</span> fromUser <span class="token operator">=</span> <span class="token class-name">WebSocketLocalContainerUtil</span><span class="token punctuation">.</span><span class="token function">getFromUser</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">SocketMsg</span> socketMsg <span class="token operator">=</span> <span class="token class-name">WebSocketLocalContainerUtil</span><span class="token punctuation">.</span><span class="token function">buildSocketMsg</span><span class="token punctuation">(</span>liveRoomId<span class="token punctuation">,</span> fromUser<span class="token punctuation">,</span> <span class="token class-name">SocketMsg<span class="token punctuation">.</span>MsgTypeEnum</span><span class="token punctuation">.</span><span class="token constant">CLOSE_SOCKET</span><span class="token punctuation">,</span> fromUser<span class="token punctuation">.</span><span class="token function">getNickname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;离开直播间&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//删除容器中的关联关系</span>
    <span class="token class-name">WebSocketLocalContainerUtil</span><span class="token punctuation">.</span><span class="token function">removeSession</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">WebSocketLocalContainerUtil</span><span class="token punctuation">.</span><span class="token function">removeFromUser</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">WebSocketLocalContainerUtil</span><span class="token punctuation">.</span><span class="token function">removeUserIdToLiveRoom</span><span class="token punctuation">(</span>liveRoomId<span class="token punctuation">,</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token class-name">WebSocketLocalContainerUtil</span><span class="token punctuation">.</span><span class="token function">sendMsg</span><span class="token punctuation">(</span>socketMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>自行测试</p><h3 id="_3-3-9-配合前端h5联调" tabindex="-1"><a class="header-anchor" href="#_3-3-9-配合前端h5联调" aria-hidden="true">#</a> 3.3.9 配合前端H5联调</h3><p>前端主播开启直播，用户登录直播间</p><p><img src="`+P+`" alt="69036033603"></p><p>到此，一个单机版的直播间聊天室构建完成</p><p>页面会有一个定时检索发送消息内容，即使用户不发送任何信息，也会调用发送消息方法。所以我们需要再发送消息方法上添加一个判断</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 封装发送消息方法.
 * <span class="token keyword">@param</span> <span class="token parameter">socketMsg</span>
 */</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">sendMsg</span><span class="token punctuation">(</span><span class="token class-name">SocketMsg</span> socketMsg<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//  判断当前是否发送消息。</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>socketMsg<span class="token punctuation">.</span><span class="token function">getMsgContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token comment">//  获取到当前直播间的用户Id集合</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> userIdList <span class="token operator">=</span> liveRoomIdToUserListMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>socketMsg<span class="token punctuation">.</span><span class="token function">getLiveRoomId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//  判断集合</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">CollectionUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>userIdList<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">//  循环遍历这个集合</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Long</span> userId <span class="token operator">:</span> userIdList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//  执行一个异步发送消息功能.</span>
            <span class="token class-name">Session</span> session <span class="token operator">=</span> <span class="token function">getSession</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> session<span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token comment">//  异步发送消息方法。</span>
                session<span class="token punctuation">.</span><span class="token function">getAsyncRemote</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sendText</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>socketMsg<span class="token punctuation">,</span> <span class="token class-name">SerializerFeature<span class="token punctuation">.</span>DisableCircularReferenceDetect</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-4-直播间即时通讯优化" tabindex="-1"><a class="header-anchor" href="#_3-4-直播间即时通讯优化" aria-hidden="true">#</a> 3.4 直播间即时通讯优化</h2><h3 id="_3-4-1-优化方案" tabindex="-1"><a class="header-anchor" href="#_3-4-1-优化方案" aria-hidden="true">#</a> 3.4.1 优化方案</h3><h4 id="当前问题" tabindex="-1"><a class="header-anchor" href="#当前问题" aria-hidden="true">#</a> 当前问题</h4><p>当前有一个问题，一个service-live微服务是没有问题，但是部署多个service-live微服务那就有问题了，同一个直播的用户可能连接到不同的service-live微服务，并且websocket的会话session只能序列化到本地内存，不能序列化到redis中，如图</p><p><img src="`+D+'" alt="69035842575"></p><p>直播间1的用户A、用户B、用户C可能连接到不同的服务器节点，怎么解决？</p><h4 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案" aria-hidden="true">#</a> 解决方案</h4><p>解决方案：redis广播</p><p><img src="'+N+`" alt="69035856670"></p><h3 id="_3-4-2-集成redis广播" tabindex="-1"><a class="header-anchor" href="#_3-4-2-集成redis广播" aria-hidden="true">#</a> 3.4.2 集成redis广播</h3><h4 id="redis广播通知配置类" tabindex="-1"><a class="header-anchor" href="#redis广播通知配置类" aria-hidden="true">#</a> redis广播通知配置类</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>tingshu<span class="token punctuation">.</span>message</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>connection<span class="token punctuation">.</span></span><span class="token class-name">RedisConnectionFactory</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>listener<span class="token punctuation">.</span></span><span class="token class-name">PatternTopic</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>listener<span class="token punctuation">.</span></span><span class="token class-name">RedisMessageListenerContainer</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>listener<span class="token punctuation">.</span>adapter<span class="token punctuation">.</span></span><span class="token class-name">MessageListenerAdapter</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * redis广播通知配置类：订阅发布
 */</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RedisChannelConfig</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * Redis消息监听器容器
     * 可以添加一个或多个监听不同主题的redis监听器，只需要把消息监听器和相应的消息订阅处理器绑定
     * 通过反射技术调用消息订阅处理器的相关方法进行业务处理
     *
     * <span class="token keyword">@param</span> <span class="token parameter">connectionFactory</span>
     * <span class="token keyword">@param</span> <span class="token parameter">listenerAdapter</span>
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">RedisMessageListenerContainer</span> <span class="token function">container</span><span class="token punctuation">(</span><span class="token class-name">RedisConnectionFactory</span> connectionFactory<span class="token punctuation">,</span>
                                                   <span class="token class-name">MessageListenerAdapter</span> listenerAdapter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">RedisMessageListenerContainer</span> container <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RedisMessageListenerContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        container<span class="token punctuation">.</span><span class="token function">setConnectionFactory</span><span class="token punctuation">(</span>connectionFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//订阅主题， 这个container 可以添加多个 messageListener</span>
        container<span class="token punctuation">.</span><span class="token function">addMessageListener</span><span class="token punctuation">(</span>listenerAdapter<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">PatternTopic</span><span class="token punctuation">(</span><span class="token string">&quot;message:list&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> container<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 消息监听器适配器，绑定消息处理器，利用反射技术调用消息处理器的业务方法
     *
     * <span class="token keyword">@param</span> <span class="token parameter">receiver</span>
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">MessageListenerAdapter</span> <span class="token function">listenerAdapter</span><span class="token punctuation">(</span><span class="token class-name">RedisMessageReceive</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//这个地方 是给messageListenerAdapter 传入一个消息接受的处理器，利用反射的方法调用“receiveMessage”</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">MessageListenerAdapter</span><span class="token punctuation">(</span>receiver<span class="token punctuation">,</span> <span class="token string">&quot;receiveMessage&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="redis广播消息处理类" tabindex="-1"><a class="header-anchor" href="#redis广播消息处理类" aria-hidden="true">#</a> redis广播消息处理类</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>tingshu<span class="token punctuation">.</span>message</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>fastjson<span class="token punctuation">.</span></span><span class="token class-name">JSON</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>tingshu<span class="token punctuation">.</span>live<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">WebSocketLocalContainerUtil</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>atguigu<span class="token punctuation">.</span>tingshu<span class="token punctuation">.</span>model<span class="token punctuation">.</span>live<span class="token punctuation">.</span></span><span class="token class-name">SocketMsg</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>redis<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">RedisTemplate</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">StringUtils</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * redis广播消息处理类
 */</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RedisMessageReceive</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">RedisTemplate</span> redisTemplate<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 接收redis广播消息的方法
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">receiveMessage</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;----------收到消息了message：&quot;</span> <span class="token operator">+</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Object</span> msg <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">getValueSerializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">deserialize</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;----------收到消息了message1：&quot;</span> <span class="token operator">+</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//从客户端传过来的数据是json数据，所以这里使用JSON进行转换为SocketMsg对象，</span>
            <span class="token class-name">SocketMsg</span> socketMsg <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">SocketMsg</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//忽略心跳消息</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">SocketMsg<span class="token punctuation">.</span>MsgTypeEnum</span><span class="token punctuation">.</span><span class="token constant">HEART_BEAT</span><span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>socketMsg<span class="token punctuation">.</span><span class="token function">getMsgType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">WebSocketLocalContainerUtil</span><span class="token punctuation">.</span><span class="token function">sendMsg</span><span class="token punctuation">(</span>socketMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="改造消息方法" tabindex="-1"><a class="header-anchor" href="#改造消息方法" aria-hidden="true">#</a> 改造消息方法</h4><p>改造WebSocketApiController类onMessage方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@OnMessage</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onMessage</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">,</span> <span class="token class-name">Session</span> session<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;来自客户端的消息：{}&quot;</span><span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//        SocketMsg socketMsg = JSON.parseObject(message, SocketMsg.class);</span>
  <span class="token comment">//        WebSocketLocalContainerUtil.sendMsg(socketMsg);</span>
  <span class="token comment">//redis广播</span>
  redisTemplate<span class="token punctuation">.</span><span class="token function">convertAndSend</span><span class="token punctuation">(</span><span class="token string">&quot;message:list&quot;</span><span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>到处，直播间即时通讯大功告成</p><p>说明：除websocket 会话session消息，容器中的其他信息我们也可以保存到redis中，自行优化调整</p>`,190);function rn(dn,mn){const a=o("ExternalLinkIcon");return c(),i("div",null,[H,n("table",null,[B,n("tbody",null,[n("tr",null,[n("td",null,[n("a",G,[s("推流协议"),t(a)])]),V]),n("tr",null,[n("td",null,[n("a",K,[s("推流方式"),t(a)])]),J]),Y])]),X,Z,z,n("table",null,[Q,n("tbody",null,[n("tr",null,[n("td",null,[n("a",$,[s("播放协议"),t(a)])]),nn]),n("tr",null,[n("td",null,[n("a",sn,[s("播放方式"),t(a)])]),an]),tn])]),pn,n("p",null,[s("进入 "),en,s(" ==> "),n("a",on,[cn,t(a)]),s("，选中事先配置的推流域名，"),ln,s(" 页面下半部分有 "),un,s(" （PHP 和 Java 两个版本）演示如何生成防盗链地址，如图：")]),kn])}const bn=e(F,[["render",rn],["__file","第10章 直播.html.vue"]]);export{bn as default};
