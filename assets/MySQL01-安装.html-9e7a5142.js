import{_ as s,o as a,c as n,e}from"./app-8007fa1b.js";const i="/assets/img009-f9c5301a.png",l="/assets/img001-fcef58aa.png",t="/assets/img002-138d32a4.png",d="/assets/img003-0422c5e9.png",r={},c=e(`<h1 id="一、mysql安装与连接" tabindex="-1"><a class="header-anchor" href="#一、mysql安装与连接" aria-hidden="true">#</a> 一、MySQL安装与连接</h1><h2 id="_1、主体程序安装" tabindex="-1"><a class="header-anchor" href="#_1、主体程序安装" aria-hidden="true">#</a> 1、主体程序安装</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 关闭防火墙（如已操作请忽略）</span>
systemctl stop firewalld

<span class="token comment"># 取消防火墙服务的开机自动启动（如已操作请忽略）</span>
systemctl disable firewalld

<span class="token comment"># 安装 docker（如已安装请忽略）</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> <span class="token function">docker</span>

<span class="token comment"># 查看 docker 版本</span>
<span class="token function">docker</span> <span class="token parameter variable">-v</span>

<span class="token comment"># 把 docker 服务设置为开机自动启动</span>
systemctl <span class="token builtin class-name">enable</span> <span class="token function">docker</span>

<span class="token comment"># 启动 docker 服务</span>
systemctl start <span class="token function">docker</span>

<span class="token comment"># 安装并启动 MySQL 镜像</span>
<span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token punctuation">\\</span>
<span class="token parameter variable">-p</span> <span class="token number">10000</span>:3306 <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> mysql8_conf:/etc/mysql/conf.d <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> mysql8_data:/var/lib/mysql <span class="token punctuation">\\</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">MYSQL_ROOT_PASSWORD</span><span class="token operator">=</span>atguigu <span class="token punctuation">\\</span>
<span class="token parameter variable">--name</span> atguigu-mysql8 <span class="token punctuation">\\</span>
mysql:8.0.25

<span class="token comment"># 查看容器信息</span>
<span class="token function">docker</span> inspect atguigu-mysql8
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><p><img src="`+i+'" alt="img.png"></p><br><h2 id="_2、建立客户端连接" tabindex="-1"><a class="header-anchor" href="#_2、建立客户端连接" aria-hidden="true">#</a> 2、建立客户端连接</h2><p><img src="'+l+'" alt="img.png"></p><br><p><img src="'+t+`" alt="img.png"></p><br><p>配置新连接报错：错误号码 2058，出现这个原因是MySQL 8 之前的版本中加密规则是mysql_native_password，而在MySQL 8之后，加密规则是 caching_sha2_password。<br> 解决方案:</p><ul><li>方案一：升级SQLyog和Navicat（因此，新版SQLyog和Navicat不会出现此问题）</li><li>方案二：把MySQL用户登录密码加密规则还原成mysql_native_password。</li></ul><br><p>解决方案： 登录你的 MySQL 数据库 登录你的 MySQL 数据库</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#进入容器：env LANG=C.UTF-8 避免容器中显示中文乱码</span>
<span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> atguigu-mysql8 <span class="token function">env</span> <span class="token assign-left variable"><span class="token environment constant">LANG</span></span><span class="token operator">=</span>C.UTF-8 /bin/bash

<span class="token comment">#进入容器内的mysql命令行</span>
mysql <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p</span>

<span class="token comment">#修改默认密码校验方式</span>
ALTER <span class="token environment constant">USER</span> <span class="token string">&#39;root&#39;</span>@<span class="token string">&#39;%&#39;</span> IDENTIFIED WITH mysql_native_password BY <span class="token string">&#39;1234&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h1 id="二、mysql相关配置" tabindex="-1"><a class="header-anchor" href="#二、mysql相关配置" aria-hidden="true">#</a> 二、MySQL相关配置</h1><h2 id="_1、字符集" tabindex="-1"><a class="header-anchor" href="#_1、字符集" aria-hidden="true">#</a> 1、字符集</h2><p>MySQL 8默认字符集是UTF8mb4不需要更改</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">show</span> variables <span class="token operator">like</span> <span class="token string">&quot;%char%&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br><p><img src="`+d+`" alt="img.png"></p><br><p>UTF8 字符集表示一个字符需要使用1～4个字节，但是我们常用的一些字符使用1～3个字节就可以表示了。<br> 而字符集表示一个字符所用的最大字节长度，在某些方面会影响系统的存储和性能，所以设计MySQL的设计者偷偷的定义了两个概念：</p><ul><li>utf8mb3：阉割过的 UTF8 字符集，只使用1～3个字节表示字符（无法存储emoji表情）。</li><li>utf8mb4：正宗的 UTF8 字符集，使用1～4个字节表示字符（可以存储emoji表情）。 注意：MySQL5.7中的UTF8是utf8mb3字符集 , MySQL8.0中的UTF8是utf8mb4字符集</li></ul><br><h2 id="_2、sql大小写规范" tabindex="-1"><a class="header-anchor" href="#_2、sql大小写规范" aria-hidden="true">#</a> 2、SQL大小写规范</h2><h3 id="_1windows和linux的区别" tabindex="-1"><a class="header-anchor" href="#_1windows和linux的区别" aria-hidden="true">#</a> ①Windows和Linux的区别</h3><ul><li>Windows系统环境：全部不区分大小写</li><li>Linux系统环境： <ul><li>数据库名、表名、表的别名、变量名严格区分大小写</li><li>列名与列的别名不区分大小写</li><li>关键字、函数名称不区分大小写</li></ul></li></ul><br><h3 id="_2linux下大小写规则设置" tabindex="-1"><a class="header-anchor" href="#_2linux下大小写规则设置" aria-hidden="true">#</a> ②Linux下大小写规则设置</h3><p>在MySQL 8中设置的具体步骤为：</p><ul><li>停止 MySQL 服务</li><li>删除数据目录，即删除 /var/lib/mysql 目录</li><li>在MySQL配置文件（/etc/my.cnf ）的 [mysqld] 中添加 lower_case_table_names=1 注意：不要在开发过程中修改此参数，将会丢失所有数据</li></ul><br><h2 id="_3、sql-mode" tabindex="-1"><a class="header-anchor" href="#_3、sql-mode" aria-hidden="true">#</a> 3、sql_mode</h2><h3 id="_1简介" tabindex="-1"><a class="header-anchor" href="#_1简介" aria-hidden="true">#</a> ①简介</h3><p>字面意思就是“SQL的模式”：</p><table><thead><tr><th>模式</th><th>含义</th></tr></thead><tbody><tr><td>STRICT_TRANS_TABLES</td><td>严格模式，要求插入或更新操作中的数据类型必须与表定义的数据类型完全匹配，否则会抛出错误</td></tr><tr><td>NO_ZERO_IN_DATE</td><td>禁止在日期中使用零值，例如&#39;0000-00-00&#39;，否则会抛出错误</td></tr><tr><td>NO_ZERO_DATE</td><td>禁止在日期或日期时间字段中使用零值，例如&#39;0000-00-00&#39;或&#39;0000-00-00 00:00:00&#39;，否则会抛出错误</td></tr><tr><td>ERROR_FOR_DIVISION_BY_ZERO</td><td>当除数为零时，执行除法运算会抛出错误</td></tr><tr><td>ONLY_FULL_GROUP_BY</td><td>要求GROUP BY子句中的列必须出现在SELECT列表中，或者是聚合函数的参数，否则会抛出错误</td></tr><tr><td>ANSI_QUOTES</td><td>启用ANSI_QUOTES模式，要求使用双引号来引用字符串，而不是单引号</td></tr></tbody></table><p>除了上述常见的sql_mode值，还有其他一些选项可以根据需要进行配置。 可以通过以下方式查看当前的sql_mode设置：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SHOW</span> VARIABLES <span class="token operator">LIKE</span> <span class="token string">&#39;sql_mode&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br><h3 id="_2更改sql-mode" tabindex="-1"><a class="header-anchor" href="#_2更改sql-mode" aria-hidden="true">#</a> ②更改sql_mode</h3><h4 id="_1-临时设置" tabindex="-1"><a class="header-anchor" href="#_1-临时设置" aria-hidden="true">#</a> [1]临时设置</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SET</span> <span class="token keyword">GLOBAL</span> sql_mode <span class="token operator">=</span> <span class="token string">&#39;mode1,model2,...&#39;</span><span class="token punctuation">;</span>  <span class="token comment">-- 全局针对所有的客户端连接有效，要重新启动客户端生效，重启MySQL服务后失效</span>
<span class="token keyword">SET</span> <span class="token keyword">SESSION</span> sql_mode <span class="token operator">=</span> <span class="token string">&#39;mode1,model2,...&#39;</span><span class="token punctuation">;</span> <span class="token comment">-- 当前会话生效，关闭当前会话就不生效了。可以省略SESSION关键字</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><br><h4 id="_2-永久设置" tabindex="-1"><a class="header-anchor" href="#_2-永久设置" aria-hidden="true">#</a> [2]永久设置</h4><p>只有在MySQL配置文件中设置才能永久生效<br></p><p>参考步骤如下（在宿主机执行操作）：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 创建配置文件</span>
<span class="token function">touch</span> /var/lib/docker/volumes/mysql8_conf/_data/my.cnf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><br><p>编辑文件内容如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[mysqld]
sql-mode = &quot;mode1,model2,...&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><br><p>重启MySQL：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> restart atguigu-mysql8
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br>`,57),o=[c];function p(m,u){return a(),n("div",null,o)}const b=s(r,[["render",p],["__file","MySQL01-安装.html.vue"]]);export{b as default};
